{
  "version": 1.1,
  "tags": [
    {
      "name": "f:base",
      "description": "View helper which creates a <base href=\"...\"></base> tag. The Base URI is taken from the current request. In TYPO3 Flow, you should always include this ViewHelper to make the links work. = Examples = <code title=\"Example\"> <f:base /> </code> <output> <base href=\"http://yourdomain.tld/\" /> (depending on your domain) </output> /",
      "attributes": []
    },
    {
      "name": "f:be.buttons.csh",
      "description": "View helper which returns CSH (context sensitive help) button with icon Note: The CSH button will only work, if the current BE user has the \"Context Sensitive Help mode\" set to something else than \"Display no help information\" in the Users settings Note: This view helper is experimental! = Examples = <code title=\"Default\"> <f:be.buttons.csh /> </code> <output> CSH button as known from the TYPO3 backend. </output> <code title=\"Full configuration\"> <f:be.buttons.csh table=\"xMOD_csh_corebe\" field=\"someCshKey\" /> </code> <output> CSH button as known from the TYPO3 backend with some custom settings. </output> <code title=\"Full configuration with content\"> <f:be.buttons.csh table=\"xMOD_csh_corebe\" field=\"someCshKey\"> some text to link </f:be.buttons.csh> </code> <output> A link with text \"some text to link\" to link the help </output> /",
      "attributes": [
        {
          "name": "${table:table}=\"$1\"",
          "description": "Table name ('_MOD_'+module name). If not set, the current module name will be used",
          "valueSet": "v"
        },
        {
          "name": "table",
          "description": "Table name ('_MOD_'+module name). If not set, the current module name will be used"
        },
        {
          "name": "${field:field}=\"$1\"",
          "description": "Field name (CSH locallang main key)",
          "valueSet": "v"
        },
        {
          "name": "field",
          "description": "Field name (CSH locallang main key)"
        },
        {
          "name": "${wrap:wrap}=\"$1\"",
          "description": "Markup to wrap around the CSH, split by \"|\"",
          "valueSet": "v"
        },
        {
          "name": "wrap",
          "description": "Markup to wrap around the CSH, split by \"|\""
        }
      ]
    },
    {
      "name": "f:be.buttons.shortcut",
      "description": "View helper which returns shortcut button with icon Note: This view helper is experimental! = Examples = <code title=\"Default\"> <f:be.buttons.shortcut /> </code> <output> Shortcut button as known from the TYPO3 backend. By default the current page id, module name and all module arguments will be stored </output> <code title=\"Explicitly set parameters to be stored in the shortcut\"> <f:be.buttons.shortcut getVars=\"{0: 'route', 1: 'myOwnPrefix'}\" setVars=\"{0: 'function'}\" /> </code> <output> Shortcut button as known from the TYPO3 backend. This time only the specified GET parameters and SET[]-settings will be stored. Note: Normally you won't need to set getVars & setVars parameters in Extbase modules </output> /",
      "attributes": [
        {
          "name": "${getVars:getVars}=\"$1\"",
          "description": "List of GET variables to store. By default the current id, module and all module arguments will be stored",
          "valueSet": "v"
        },
        {
          "name": "getVars",
          "description": "List of GET variables to store. By default the current id, module and all module arguments will be stored"
        },
        {
          "name": "${setVars:setVars}=\"$1\"",
          "description": "List of SET[] variables to store. See DocumentTemplate::makeShortcutIcon(). Normally won't be used by Extbase modules",
          "valueSet": "v"
        },
        {
          "name": "setVars",
          "description": "List of SET[] variables to store. See DocumentTemplate::makeShortcutIcon(). Normally won't be used by Extbase modules"
        }
      ]
    },
    {
      "name": "f:be.container",
      "description": "View helper which allows you to create extbase based modules in the style of TYPO3 default modules. = Examples = <code title=\"Simple\"> <f:be.container>your module content</f:be.container> </code> <output> \"your module content\" wrapped with proper head & body tags. Default backend CSS styles and JavaScript will be included </output> <code title=\"All options\"> <f:be.container pageTitle=\"foo\" includeCssFiles=\"{0: '{f:uri.resource(path:\\'Css/Styles.css\\')}'}\" includeJsFiles=\"{0: '{f:uri.resource(path:\\'JavaScript/Library1.js\\')}', 1: '{f:uri.resource(path:\\'JavaScript/Library2.js\\')}'}\" addJsInlineLabels=\"{0: 'label1', 1: 'label2'}\">your module content</f:be.container> </code> <output> \"your module content\" wrapped with proper head & body tags. Custom CSS file EXT:your_extension/Resources/Public/Css/styles.css and JavaScript files EXT:your_extension/Resources/Public/JavaScript/Library1.js and EXT:your_extension/Resources/Public/JavaScript/Library2.js will be loaded, plus some inline labels for usage in JS code. </output> /",
      "attributes": [
        {
          "name": "${pageTitle:pageTitle}=\"$1\"",
          "description": "Title tag of the module. Not required by default, as BE modules are shown in a frame",
          "valueSet": "v"
        },
        {
          "name": "pageTitle",
          "description": "Title tag of the module. Not required by default, as BE modules are shown in a frame"
        },
        {
          "name": "${includeCssFiles:includeCssFiles}=\"$1\"",
          "description": "List of custom CSS file to be loaded",
          "valueSet": "v"
        },
        {
          "name": "includeCssFiles",
          "description": "List of custom CSS file to be loaded"
        },
        {
          "name": "${includeJsFiles:includeJsFiles}=\"$1\"",
          "description": "List of custom JavaScript file to be loaded",
          "valueSet": "v"
        },
        {
          "name": "includeJsFiles",
          "description": "List of custom JavaScript file to be loaded"
        },
        {
          "name": "${addJsInlineLabels:addJsInlineLabels}=\"$1\"",
          "description": "Custom labels to add to JavaScript inline labels",
          "valueSet": "v"
        },
        {
          "name": "addJsInlineLabels",
          "description": "Custom labels to add to JavaScript inline labels"
        },
        {
          "name": "${includeRequireJsModules:includeRequireJsModules}=\"$1\"",
          "description": "List of RequireJS modules to be loaded",
          "valueSet": "v"
        },
        {
          "name": "includeRequireJsModules",
          "description": "List of RequireJS modules to be loaded"
        }
      ]
    },
    {
      "name": "f:be.infobox",
      "description": "View helper for rendering a styled content infobox markup. = States = The Infobox provides different context sensitive states that can be used to provide an additional visual feedback to the to the user to underline the meaning of the information. Possible values are in range from -2 to 2. Please choose a meaningful value from the following list. -2: Notices (Default) -1: Information 0: Positive feedback 1: Warnings 2: Error = Examples = <code title=\"Simple\"> <f:be.infobox title=\"Message title\">your box content</f:be.infobox> </code> <code title=\"All options\"> <f:be.infobox title=\"Message title\" message=\"your box content\" state=\"-2\" iconName=\"check\" disableIcon=\"true\" /> </code> /",
      "attributes": [
        {
          "name": "${message:message}=\"$1\"",
          "description": "The message of the info box, if NULL tag content is used",
          "valueSet": "v"
        },
        {
          "name": "message",
          "description": "The message of the info box, if NULL tag content is used"
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "The title of the info box",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "The title of the info box"
        },
        {
          "name": "${state:state}=\"$1\"",
          "description": "The state of the box, InfoboxViewHelper::STATE_*",
          "valueSet": "v"
        },
        {
          "name": "state",
          "description": "The state of the box, InfoboxViewHelper::STATE_*"
        },
        {
          "name": "${iconName:iconName}=\"$1\"",
          "description": "The icon name from font awesome, NULL sets default icon",
          "valueSet": "v"
        },
        {
          "name": "iconName",
          "description": "The icon name from font awesome, NULL sets default icon"
        },
        {
          "name": "${disableIcon:disableIcon}=\"$1\"",
          "description": "If set to TRUE, the icon is not rendered.",
          "valueSet": "v"
        },
        {
          "name": "disableIcon",
          "description": "If set to TRUE, the icon is not rendered."
        }
      ]
    },
    {
      "name": "f:be.labels.csh",
      "description": "View helper which returns CSH (context sensitive help) label with icon hover Note: The CSH label will only work, if the current BE user has the \"Context Sensitive Help mode\" set to something else than \"Display no help information\" in the Users settings Note: This view helper is experimental! = Examples = <code title=\"Default\"> <f:be.labels.csh /> </code> <output> CSH label as known from the TYPO3 backend. </output> <code title=\"Full configuration\"> <f:be.labels.csh table=\"xMOD_csh_corebe\" field=\"someCshKey\" label=\"lang/Resources/Private/Language/locallang/header.languages\" /> </code> <output> CSH label as known from the TYPO3 backend with some custom settings. </output> /",
      "attributes": [
        {
          "name": "${table:table}=\"$1\"",
          "description": "Table name ('_MOD_'+module name). If not set, the current module name will be used",
          "valueSet": "v"
        },
        {
          "name": "table",
          "description": "Table name ('_MOD_'+module name). If not set, the current module name will be used"
        },
        {
          "name": "${field:field}=\"$1\"",
          "description": "Field name (CSH locallang main key)",
          "valueSet": "v"
        },
        {
          "name": "field",
          "description": "Field name (CSH locallang main key)"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Language label which is wrapped with the CSH",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Language label which is wrapped with the CSH"
        }
      ]
    },
    {
      "name": "f:be.link",
      "description": "A view helper for creating URIs to modules. = Examples = <code title=\"URI to the web_ts module on page 92\"> <f:be.link route=\"web_ts\" parameters=\"{id: 92}\">Go to web_ts</f:be.link> </code> <output> <a href=\"/typo3/index.php?route=%2module%2web_ts%2&moduleToken=b6e9c9f?id=92\">Go to web_ts</a> </output> /",
      "attributes": [
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${route:route}=\"$1\"",
          "description": "The name of the route",
          "valueSet": "v"
        },
        {
          "name": "route",
          "description": "The name of the route"
        },
        {
          "name": "${parameters:parameters}=\"$1\"",
          "description": "An array of parameters",
          "valueSet": "v"
        },
        {
          "name": "parameters",
          "description": "An array of parameters"
        },
        {
          "name": "${referenceType:referenceType}=\"$1\"",
          "description": "The type of reference to be generated (one of the constants)",
          "valueSet": "v"
        },
        {
          "name": "referenceType",
          "description": "The type of reference to be generated (one of the constants)"
        },
        {
          "name": "${name:name}=\"$1\"",
          "description": "Specifies the name of an anchor",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Specifies the name of an anchor"
        },
        {
          "name": "${rel:rel}=\"$1\"",
          "description": "Specifies the relationship between the current document and the linked document",
          "valueSet": "v"
        },
        {
          "name": "rel",
          "description": "Specifies the relationship between the current document and the linked document"
        },
        {
          "name": "${rev:rev}=\"$1\"",
          "description": "Specifies the relationship between the linked document and the current document",
          "valueSet": "v"
        },
        {
          "name": "rev",
          "description": "Specifies the relationship between the linked document and the current document"
        },
        {
          "name": "${target:target}=\"$1\"",
          "description": "Specifies where to open the linked document",
          "valueSet": "v"
        },
        {
          "name": "target",
          "description": "Specifies where to open the linked document"
        },
        {
          "name": "${class:class}=\"$1\"",
          "description": "CSS class(es) for this element",
          "valueSet": "v"
        },
        {
          "name": "class",
          "description": "CSS class(es) for this element"
        },
        {
          "name": "${dir:dir}=\"$1\"",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)",
          "valueSet": "v"
        },
        {
          "name": "dir",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)"
        },
        {
          "name": "${id:id}=\"$1\"",
          "description": "Unique (in this file) identifier for this HTML element.",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "Unique (in this file) identifier for this HTML element."
        },
        {
          "name": "${lang:lang}=\"$1\"",
          "description": "Language for this element. Use short names specified in RFC 1766",
          "valueSet": "v"
        },
        {
          "name": "lang",
          "description": "Language for this element. Use short names specified in RFC 1766"
        },
        {
          "name": "${style:style}=\"$1\"",
          "description": "Individual CSS styles for this element",
          "valueSet": "v"
        },
        {
          "name": "style",
          "description": "Individual CSS styles for this element"
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "Tooltip text of element",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "Tooltip text of element"
        },
        {
          "name": "${accesskey:accesskey}=\"$1\"",
          "description": "Keyboard shortcut to access this element",
          "valueSet": "v"
        },
        {
          "name": "accesskey",
          "description": "Keyboard shortcut to access this element"
        },
        {
          "name": "${tabindex:tabindex}=\"$1\"",
          "description": "Specifies the tab order of this element",
          "valueSet": "v"
        },
        {
          "name": "tabindex",
          "description": "Specifies the tab order of this element"
        },
        {
          "name": "${onclick:onclick}=\"$1\"",
          "description": "JavaScript evaluated for the onclick event",
          "valueSet": "v"
        },
        {
          "name": "onclick",
          "description": "JavaScript evaluated for the onclick event"
        }
      ]
    },
    {
      "name": "f:be.menus.actionMenuItemGroup",
      "description": "View helper which groups options of an option tag. = Example = <f:be.menus.actionMenu> <f:be.menus.actionMenuItem label=\"Default: Welcome\" controller=\"Default\" action=\"index\" /> <f:be.menus.actionMenuItem label=\"Community: get in touch\" controller=\"Community\" action=\"index\" /> <f:be.menus.actionMenuItemGroup label=\"Information\"> <f:be.menus.actionMenuItem label=\"PHP Information\" controller=\"Information\" action=\"listPhpInfo\" /> <f:be.menus.actionMenuItem label=\"Documentation\" controller=\"Information\" action=\"documentation\" /> <f:be.menus.actionMenuItem label=\"Hooks\" controller=\"Information\" action=\"hooks\" /> <f:be.menus.actionMenuItem label=\"Signals\" controller=\"Information\" action=\"signals\" /> <f:be.menus.actionMenuItem label=\"XClasses\" controller=\"Information\" action=\"xclass\" /> </f:be.menus.actionMenuItemGroup> </f:be.menus.actionMenu> /",
      "attributes": [
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${defaultController:defaultController}=\"$1\"",
          "description": "defaultController",
          "valueSet": "v"
        },
        {
          "name": "defaultController",
          "description": "defaultController"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "label",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "label"
        }
      ]
    },
    {
      "name": "f:be.menus.actionMenuItem",
      "description": "View helper which returns an option tag. This view helper only works in conjunction with \\TYPO3\\CMS\\Fluid\\ViewHelpers\\Be\\Menus\\ActionMenuViewHelper Note: This view helper is experimental! = Examples = <code title=\"Simple\"> <f:be.menus.actionMenu> <f:be.menus.actionMenuItem label=\"Overview\" controller=\"Blog\" action=\"index\" /> <f:be.menus.actionMenuItem label=\"Create new Blog\" controller=\"Blog\" action=\"new\" /> <f:be.menus.actionMenuItem label=\"List Posts\" controller=\"Post\" action=\"index\" arguments=\"{blog: blog}\" /> </f:be.menus.actionMenu> </code> <output> Selectbox with the options \"Overview\", \"Create new Blog\" and \"List Posts\" </output> <code title=\"Localized\"> <f:be.menus.actionMenu> <f:be.menus.actionMenuItem label=\"{f:translate(key='overview')}\" controller=\"Blog\" action=\"index\" /> <f:be.menus.actionMenuItem label=\"{f:translate(key='create_blog')}\" controller=\"Blog\" action=\"new\" /> </f:be.menus.actionMenu> </code> <output> localized selectbox <output> /",
      "attributes": [
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "label of the option tag",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "label of the option tag"
        },
        {
          "name": "${controller:controller}=\"$1\"",
          "description": "controller to be associated with this ActionMenuItem",
          "valueSet": "v"
        },
        {
          "name": "controller",
          "description": "controller to be associated with this ActionMenuItem"
        },
        {
          "name": "${action:action}=\"$1\"",
          "description": "the action to be associated with this ActionMenuItem",
          "valueSet": "v"
        },
        {
          "name": "action",
          "description": "the action to be associated with this ActionMenuItem"
        },
        {
          "name": "${arguments:arguments}=\"$1\"",
          "description": "additional controller arguments to be passed to the action when this ActionMenuItem is selected",
          "valueSet": "v"
        },
        {
          "name": "arguments",
          "description": "additional controller arguments to be passed to the action when this ActionMenuItem is selected"
        }
      ]
    },
    {
      "name": "f:be.menus.actionMenu",
      "description": "View helper which returns a select box, that can be used to switch between multiple actions and controllers and looks similar to TYPO3s funcMenu. Note: This view helper is experimental! = Examples = <code title=\"Simple\"> <f:be.menus.actionMenu> <f:be.menus.actionMenuItem label=\"Overview\" controller=\"Blog\" action=\"index\" /> <f:be.menus.actionMenuItem label=\"Create new Blog\" controller=\"Blog\" action=\"new\" /> <f:be.menus.actionMenuItem label=\"List Posts\" controller=\"Post\" action=\"index\" arguments=\"{blog: blog}\" /> </f:be.menus.actionMenu> </code> <output> Selectbox with the options \"Overview\", \"Create new Blog\" and \"List Posts\" </output> <code title=\"Localized\"> <f:be.menus.actionMenu> <f:be.menus.actionMenuItem label=\"{f:translate(key:'overview')}\" controller=\"Blog\" action=\"index\" /> <f:be.menus.actionMenuItem label=\"{f:translate(key:'create_blog')}\" controller=\"Blog\" action=\"new\" /> </f:be.menus.actionMenu> </code> <output> localized selectbox <output> /",
      "attributes": [
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${defaultController:defaultController}=\"$1\"",
          "description": "defaultController",
          "valueSet": "v"
        },
        {
          "name": "defaultController",
          "description": "defaultController"
        }
      ]
    },
    {
      "name": "f:be.pageInfo",
      "description": "View helper which return page info icon as known from TYPO3 backend modules Note: This view helper is experimental! = Examples = <code> <f:be.pageInfo /> </code> <output> Page info icon with context menu </output> /",
      "attributes": []
    },
    {
      "name": "f:be.pagePath",
      "description": "View helper which returns the current page path as known from TYPO3 backend modules Note: This view helper is experimental! = Examples = <code> <f:be.pagePath /> </code> <output> Current page path, prefixed with \"Path:\" and wrapped in a span with the class \"typo3-docheader-pagePath\" </output> /",
      "attributes": []
    },
    {
      "name": "f:be.pageRenderer",
      "description": "View helper which allows you to create extbase based modules in the style of TYPO3 default modules. = Examples = <code title=\"All options\"> <f:be.pageRenderer pageTitle=\"foo\" includeCssFiles=\"0: '{f:uri.resource(path:\\'Css/Styles.css\\')}'\" includeJsFiles=\"0: '{f:uri.resource(path:\\'JavaScript/Library1.js\\')}', 1: '{f:uri.resource(path:\\'JavaScript/Library2.js\\')}'\" addJsInlineLabels=\"{0: 'label1', 1: 'label2'}\" /> </code> <output> Custom CSS file EXT:your_extension/Resources/Public/Css/styles.css and JavaScript files EXT:your_extension/Resources/Public/JavaScript/Library1.js and EXT:your_extension/Resources/Public/JavaScript/Library2.js will be loaded, plus some inline labels for usage in JS code. </output> /",
      "attributes": [
        {
          "name": "${pageTitle:pageTitle}=\"$1\"",
          "description": "title tag of the module. Not required by default, as BE modules are shown in a frame",
          "valueSet": "v"
        },
        {
          "name": "pageTitle",
          "description": "title tag of the module. Not required by default, as BE modules are shown in a frame"
        },
        {
          "name": "${includeCssFiles:includeCssFiles}=\"$1\"",
          "description": "List of custom CSS file to be loaded",
          "valueSet": "v"
        },
        {
          "name": "includeCssFiles",
          "description": "List of custom CSS file to be loaded"
        },
        {
          "name": "${includeJsFiles:includeJsFiles}=\"$1\"",
          "description": "List of custom JavaScript file to be loaded",
          "valueSet": "v"
        },
        {
          "name": "includeJsFiles",
          "description": "List of custom JavaScript file to be loaded"
        },
        {
          "name": "${addJsInlineLabels:addJsInlineLabels}=\"$1\"",
          "description": "Custom labels to add to JavaScript inline labels",
          "valueSet": "v"
        },
        {
          "name": "addJsInlineLabels",
          "description": "Custom labels to add to JavaScript inline labels"
        },
        {
          "name": "${includeRequireJsModules:includeRequireJsModules}=\"$1\"",
          "description": "List of RequireJS modules to be loaded",
          "valueSet": "v"
        },
        {
          "name": "includeRequireJsModules",
          "description": "List of RequireJS modules to be loaded"
        },
        {
          "name": "${addInlineSettings:addInlineSettings}=\"$1\"",
          "description": "Adds Javascript Inline Setting",
          "valueSet": "v"
        },
        {
          "name": "addInlineSettings",
          "description": "Adds Javascript Inline Setting"
        }
      ]
    },
    {
      "name": "f:be.security.ifAuthenticated",
      "description": "This view helper implements an ifAuthenticated/else condition for BE users/groups. = Examples = <code title=\"Basic usage\"> <f:be.security.ifAuthenticated> This is being shown whenever a BE user is logged in </f:be.security.ifAuthenticated> </code> <output> Everything inside the <f:be.ifAuthenticated> tag is being displayed if you are authenticated with any BE user account. </output> <code title=\"IfAuthenticated / then / else\"> <f:be.security.ifAuthenticated> <f:then> This is being shown in case you have access. </f:then> <f:else> This is being displayed in case you do not have access. </f:else> </f:be.security.ifAuthenticated> </code> <output> Everything inside the \"then\" tag is displayed if you have access. Otherwise, everything inside the \"else\"-tag is displayed. </output> /",
      "attributes": [
        {
          "name": "${then:then}=\"$1\"",
          "description": "Value to be returned if the condition if met.",
          "valueSet": "v"
        },
        {
          "name": "then",
          "description": "Value to be returned if the condition if met."
        },
        {
          "name": "${else:else}=\"$1\"",
          "description": "Value to be returned if the condition if not met.",
          "valueSet": "v"
        },
        {
          "name": "else",
          "description": "Value to be returned if the condition if not met."
        },
        {
          "name": "${condition:condition}=\"$1\"",
          "description": "Condition expression conforming to Fluid boolean rules",
          "valueSet": "v"
        },
        {
          "name": "condition",
          "description": "Condition expression conforming to Fluid boolean rules"
        }
      ]
    },
    {
      "name": "f:be.security.ifHasRole",
      "description": "This view helper implements an ifHasRole/else condition for BE users/groups. = Examples = <code title=\"Basic usage\"> <f:be.security.ifHasRole role=\"Administrator\"> This is being shown in case the current BE user belongs to a BE usergroup (aka role) titled \"Administrator\" (case sensitive) </f:be.security.ifHasRole> </code> <output> Everything inside the <f:ifHasRole> tag is being displayed if the logged in BE user belongs to the specified role. </output> <code title=\"Using the usergroup uid as role identifier\"> <f:be.security.ifHasRole role=\"1\"> This is being shown in case the current BE user belongs to a BE usergroup (aka role) with the uid \"1\" </f:be.security.ifHasRole> </code> <output> Everything inside the <f:ifHasRole> tag is being displayed if the logged in BE user belongs to the specified role. </output> <code title=\"IfRole / then / else\"> <f:be.security.ifHasRole role=\"Administrator\"> <f:then> This is being shown in case you have the role. </f:then> <f:else> This is being displayed in case you do not have the role. </f:else> </f:be.security.ifHasRole> </code> <output> Everything inside the \"then\" tag is displayed if the logged in BE user belongs to the specified role. Otherwise, everything inside the \"else\"-tag is displayed. </output> /",
      "attributes": [
        {
          "name": "${role:role}=\"$1\"",
          "description": "The usergroup (either the usergroup uid or its title).",
          "valueSet": "v"
        },
        {
          "name": "role",
          "description": "The usergroup (either the usergroup uid or its title)."
        }
      ]
    },
    {
      "name": "f:be.tableList",
      "description": "View helper which renders a record list as known from the TYPO3 list module Note: This feature is experimental! = Examples = <code title=\"Minimal\"> <f:be.tableList tableName=\"fe_users\" /> </code> <output> List of all \"Website user\" records stored in the configured storage PID. Records will be editable, if the current BE user has got edit rights for the table \"fe_users\". Only the title column (username) will be shown. Context menu is active. </output> <code title=\"Full\"> <f:be.tableList tableName=\"fe_users\" fieldList=\"{0: 'name', 1: 'email'}\" storagePid=\"1\" levels=\"2\" filter='foo' recordsPerPage=\"10\" sortField=\"name\" sortDescending=\"true\" readOnly=\"true\" enableClickMenu=\"false\" clickTitleMode=\"info\" /> </code> <output> List of \"Website user\" records with a text property of \"foo\" stored on PID 1 and two levels down. Clicking on a username will open the TYPO3 info popup for the respective record </output> /",
      "attributes": [
        {
          "name": "${tableName:tableName}=\"$1\"",
          "description": "name of the database table",
          "valueSet": "v"
        },
        {
          "name": "tableName",
          "description": "name of the database table"
        },
        {
          "name": "${fieldList:fieldList}=\"$1\"",
          "description": "list of fields to be displayed. If empty, only the title column (configured in $TCA[$tableName]['ctrl']['title']) is shown",
          "valueSet": "v"
        },
        {
          "name": "fieldList",
          "description": "list of fields to be displayed. If empty, only the title column (configured in $TCA[$tableName]['ctrl']['title']) is shown"
        },
        {
          "name": "${storagePid:storagePid}=\"$1\"",
          "description": "by default, records are fetched from the storage PID configured in persistence.storagePid. With this argument, the storage PID can be overwritten",
          "valueSet": "v"
        },
        {
          "name": "storagePid",
          "description": "by default, records are fetched from the storage PID configured in persistence.storagePid. With this argument, the storage PID can be overwritten"
        },
        {
          "name": "${levels:levels}=\"$1\"",
          "description": "corresponds to the level selector of the TYPO3 list module. By default only records from the current storagePid are fetched",
          "valueSet": "v"
        },
        {
          "name": "levels",
          "description": "corresponds to the level selector of the TYPO3 list module. By default only records from the current storagePid are fetched"
        },
        {
          "name": "${filter:filter}=\"$1\"",
          "description": "corresponds to the \"Search String\" textbox of the TYPO3 list module. If not empty, only records matching the string will be fetched",
          "valueSet": "v"
        },
        {
          "name": "filter",
          "description": "corresponds to the \"Search String\" textbox of the TYPO3 list module. If not empty, only records matching the string will be fetched"
        },
        {
          "name": "${recordsPerPage:recordsPerPage}=\"$1\"",
          "description": "amount of records to be displayed at once. Defaults to $TCA[$tableName]['interface']['maxSingleDBListItems'] or (if that's not set) to 100",
          "valueSet": "v"
        },
        {
          "name": "recordsPerPage",
          "description": "amount of records to be displayed at once. Defaults to $TCA[$tableName]['interface']['maxSingleDBListItems'] or (if that's not set) to 100"
        },
        {
          "name": "${sortField:sortField}=\"$1\"",
          "description": "table field to sort the results by",
          "valueSet": "v"
        },
        {
          "name": "sortField",
          "description": "table field to sort the results by"
        },
        {
          "name": "${sortDescending:sortDescending}=\"$1\"",
          "description": "if TRUE records will be sorted in descending order",
          "valueSet": "v"
        },
        {
          "name": "sortDescending",
          "description": "if TRUE records will be sorted in descending order"
        },
        {
          "name": "${readOnly:readOnly}=\"$1\"",
          "description": "if TRUE, the edit icons won't be shown. Otherwise edit icons will be shown, if the current BE user has edit rights for the specified table!",
          "valueSet": "v"
        },
        {
          "name": "readOnly",
          "description": "if TRUE, the edit icons won't be shown. Otherwise edit icons will be shown, if the current BE user has edit rights for the specified table!"
        },
        {
          "name": "${enableClickMenu:enableClickMenu}=\"$1\"",
          "description": "enables context menu",
          "valueSet": "v"
        },
        {
          "name": "enableClickMenu",
          "description": "enables context menu"
        },
        {
          "name": "${clickTitleMode:clickTitleMode}=\"$1\"",
          "description": "one of \"edit\", \"show\" (only pages, tt_content), \"info",
          "valueSet": "v"
        },
        {
          "name": "clickTitleMode",
          "description": "one of \"edit\", \"show\" (only pages, tt_content), \"info"
        }
      ]
    },
    {
      "name": "f:be.uri",
      "description": "A view helper for creating URIs to modules. = Examples = <code title=\"URI to the web_ts module on page 92\"> <f:be.uri route=\"web_ts\" parameters=\"{id: 92}\"/> </code> <output> /typo3/index.php?M=web_ts&moduleToken=b6e9c9f?id=92 </output> <code title=\"Inline notation\"> {f:be.uri(route: 'web_ts', parameters: '{id: 92}')} </code> <output> /typo3/index.php?route=%2module%2web_ts%2&moduleToken=b6e9c9f?id=92 </output> /",
      "attributes": [
        {
          "name": "${route:route}=\"$1\"",
          "description": "The name of the route",
          "valueSet": "v"
        },
        {
          "name": "route",
          "description": "The name of the route"
        },
        {
          "name": "${parameters:parameters}=\"$1\"",
          "description": "An array of parameters",
          "valueSet": "v"
        },
        {
          "name": "parameters",
          "description": "An array of parameters"
        },
        {
          "name": "${referenceType:referenceType}=\"$1\"",
          "description": "The type of reference to be generated (one of the constants)",
          "valueSet": "v"
        },
        {
          "name": "referenceType",
          "description": "The type of reference to be generated (one of the constants)"
        }
      ]
    },
    {
      "name": "f:be.widget.paginate",
      "description": "This ViewHelper renders a Pagination of objects for the TYPO3 Backend. = Examples = <code title=\"required arguments\"> <f:be.widget.paginate objects=\"{blogs}\" as=\"paginatedBlogs\"> use {paginatedBlogs} as you used {blogs} before, most certainly inside a <f:for> loop. </f:be.widget.paginate> </code> <code title=\"full configuration\"> <f:be.widget.paginate objects=\"{blogs}\" as=\"paginatedBlogs\" configuration=\"{itemsPerPage: 5, insertAbove: 1, insertBelow: 0, recordsLabel: 'MyRecords'}\"> use {paginatedBlogs} as you used {blogs} before, most certainly inside a <f:for> loop. </f:be.widget.paginate> The recordsLabel can be used to replace the text in \"Records 1 - 99\" with a label of your own choice </code> = Performance characteristics = In the above examples, it looks like {blogs} contains all Blog objects, thus you might wonder if all objects were fetched from the database. However, the blogs are NOT fetched from the database until you actually use them, so the paginate ViewHelper will adjust the query sent to the database and receive only the small subset of objects. So, there is no negative performance overhead in using the Be Paginate Widget. /",
      "attributes": [
        {
          "name": "${customWidgetId:customWidgetId}=\"$1\"",
          "description": "extend the widget identifier with a custom widget id",
          "valueSet": "v"
        },
        {
          "name": "customWidgetId",
          "description": "extend the widget identifier with a custom widget id"
        },
        {
          "name": "${objects:objects}=\"$1\"",
          "description": "Object",
          "valueSet": "v"
        },
        {
          "name": "objects",
          "description": "Object"
        },
        {
          "name": "${as:as}=\"$1\"",
          "description": "as",
          "valueSet": "v"
        },
        {
          "name": "as",
          "description": "as"
        },
        {
          "name": "${configuration:configuration}=\"$1\"",
          "description": "configuration",
          "valueSet": "v"
        },
        {
          "name": "configuration",
          "description": "configuration"
        }
      ]
    },
    {
      "name": "f:cObject",
      "description": "This ViewHelper renders CObjects from the global TypoScript configuration. NOTE: You have to ensure proper escaping (htmlspecialchars/intval/etc.) on your own! = Examples = <code title=\"Render lib object\"> <f:cObject typoscriptObjectPath=\"lib.someLibObject\" /> </code> <output> rendered lib.someLibObject </output> <code title=\"Specify cObject data & current value\"> <f:cObject typoscriptObjectPath=\"lib.customHeader\" data=\"{article}\" currentValueKey=\"title\" /> </code> <output> rendered lib.customHeader. data and current value will be available in TypoScript </output> <code title=\"inline notation\"> {article -> f:cObject(typoscriptObjectPath: 'lib.customHeader')} </code> <output> rendered lib.customHeader. data will be available in TypoScript </output> /",
      "attributes": [
        {
          "name": "${data:data}=\"$1\"",
          "description": "the data to be used for rendering the cObject. Can be an object, array or string. If this argument is not set, child nodes will be used",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "the data to be used for rendering the cObject. Can be an object, array or string. If this argument is not set, child nodes will be used"
        },
        {
          "name": "${typoscriptObjectPath:typoscriptObjectPath}=\"$1\"",
          "description": "the TypoScript setup path of the TypoScript object to render",
          "valueSet": "v"
        },
        {
          "name": "typoscriptObjectPath",
          "description": "the TypoScript setup path of the TypoScript object to render"
        },
        {
          "name": "${currentValueKey:currentValueKey}=\"$1\"",
          "description": "currentValueKey",
          "valueSet": "v"
        },
        {
          "name": "currentValueKey",
          "description": "currentValueKey"
        },
        {
          "name": "${table:table}=\"$1\"",
          "description": "the table name associated with \"data\" argument. Typically tt_content or one of your custom tables. This argument should be set if rendering a FILES cObject where file references are used, or if the data argument is a database record.",
          "valueSet": "v"
        },
        {
          "name": "table",
          "description": "the table name associated with \"data\" argument. Typically tt_content or one of your custom tables. This argument should be set if rendering a FILES cObject where file references are used, or if the data argument is a database record."
        }
      ]
    },
    {
      "name": "f:debug",
      "description": "This ViewHelper generates a HTML dump of the tagged variable. = Examples = <code title=\"Simple\"> <f:debug>{testVariables.array}</f:debug> </code> <output> foobarbazfoo </output> <code title=\"All Features\"> <f:debug title=\"My Title\" maxDepth=\"5\" blacklistedClassNames=\"{0:'Tx_BlogExample_Domain_Model_Administrator'}\" plainText=\"true\" ansiColors=\"false\" inline=\"true\" blacklistedPropertyNames=\"{0:'posts'}\">{blogs}</f:debug> </code> <output> [A HTML view of the var_dump] </output> /",
      "attributes": [
        {
          "name": "${title:title}=\"$1\"",
          "description": "optional custom title for the debug output",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "optional custom title for the debug output"
        },
        {
          "name": "${maxDepth:maxDepth}=\"$1\"",
          "description": "Sets the max recursion depth of the dump (defaults to 8). De- or increase the number according to your needs and memory limit.",
          "valueSet": "v"
        },
        {
          "name": "maxDepth",
          "description": "Sets the max recursion depth of the dump (defaults to 8). De- or increase the number according to your needs and memory limit."
        },
        {
          "name": "${plainText:plainText}=\"$1\"",
          "description": "If TRUE, the dump is in plain text, if FALSE the debug output is in HTML format.",
          "valueSet": "v"
        },
        {
          "name": "plainText",
          "description": "If TRUE, the dump is in plain text, if FALSE the debug output is in HTML format."
        },
        {
          "name": "${ansiColors:ansiColors}=\"$1\"",
          "description": "If TRUE, ANSI color codes is added to the plaintext output, if FALSE (default) the plaintext debug output not colored.",
          "valueSet": "v"
        },
        {
          "name": "ansiColors",
          "description": "If TRUE, ANSI color codes is added to the plaintext output, if FALSE (default) the plaintext debug output not colored."
        },
        {
          "name": "${inline:inline}=\"$1\"",
          "description": "if TRUE, the dump is rendered at the position of the <f:debug> tag. If FALSE (default), the dump is displayed at the top of the page.",
          "valueSet": "v"
        },
        {
          "name": "inline",
          "description": "if TRUE, the dump is rendered at the position of the <f:debug> tag. If FALSE (default), the dump is displayed at the top of the page."
        },
        {
          "name": "${blacklistedClassNames:blacklistedClassNames}=\"$1\"",
          "description": "An array of class names (RegEx) to be filtered. Default is an array of some common class names.",
          "valueSet": "v"
        },
        {
          "name": "blacklistedClassNames",
          "description": "An array of class names (RegEx) to be filtered. Default is an array of some common class names."
        },
        {
          "name": "${blacklistedPropertyNames:blacklistedPropertyNames}=\"$1\"",
          "description": "An array of property names and/or array keys (RegEx) to be filtered. Default is an array of some common property names.",
          "valueSet": "v"
        },
        {
          "name": "blacklistedPropertyNames",
          "description": "An array of property names and/or array keys (RegEx) to be filtered. Default is an array of some common property names."
        }
      ]
    },
    {
      "name": "f:debug.render",
      "description": "Debuggable version of f:render - performs the same rendering operation but wraps the output with HTML that can be inspected with the admin panel in FE. Replaces `f:render` when the admin panel decides (see ViewHelperResolver class). Also possible to use explicitly by using `f:debug.render` instead of the normal `f:render` statement. /",
      "attributes": [
        {
          "name": "${debug:debug}=\"$1\"",
          "description": "If true, the admin panel shows debug information if activated,",
          "valueSet": "v"
        },
        {
          "name": "debug",
          "description": "If true, the admin panel shows debug information if activated,"
        },
        {
          "name": "${section:section}=\"$1\"",
          "description": "Section to render - combine with partial to render section in partial",
          "valueSet": "v"
        },
        {
          "name": "section",
          "description": "Section to render - combine with partial to render section in partial"
        },
        {
          "name": "${partial:partial}=\"$1\"",
          "description": "Partial to render, with or without section",
          "valueSet": "v"
        },
        {
          "name": "partial",
          "description": "Partial to render, with or without section"
        },
        {
          "name": "${arguments:arguments}=\"$1\"",
          "description": "Array of variables to be transferred. Use {_all} for all variables",
          "valueSet": "v"
        },
        {
          "name": "arguments",
          "description": "Array of variables to be transferred. Use {_all} for all variables"
        },
        {
          "name": "${optional:optional}=\"$1\"",
          "description": "If TRUE, considers the *section* optional. Partial never is.",
          "valueSet": "v"
        },
        {
          "name": "optional",
          "description": "If TRUE, considers the *section* optional. Partial never is."
        },
        {
          "name": "${default:default}=\"$1\"",
          "description": "Value (usually string) to be displayed if the section or partial does not exist",
          "valueSet": "v"
        },
        {
          "name": "default",
          "description": "Value (usually string) to be displayed if the section or partial does not exist"
        },
        {
          "name": "${contentAs:contentAs}=\"$1\"",
          "description": "If used, renders the child content and adds it as a template variable with this name for use in the partial/section",
          "valueSet": "v"
        },
        {
          "name": "contentAs",
          "description": "If used, renders the child content and adds it as a template variable with this name for use in the partial/section"
        }
      ]
    },
    {
      "name": "f:flashMessages",
      "description": "View helper which renders the flash messages (if there are any) as an unsorted list. In case you need custom Flash Message HTML output, please write your own ViewHelper for the moment. = Examples = <code title=\"Simple\"> <f:flashMessages /> </code> <output> A list of flash messages. </output> <code title=\"TYPO3 core style\"> <f:flashMessages /> </code> <output> <div class=\"typo3-messages\"> <div class=\"alert alert-info\"> <div class=\"media\"> <div class=\"media-left\"> <span class=\"fa-stack fa-lg\"> <i class=\"fa fa-circle fa-stack-2x\"></i> <i class=\"fa fa-info fa-stack-1x\"></i> </span> </div> <div class=\"media-body\"> <h4 class=\"alert-title\">Info - Title for Info message</h4> <p class=\"alert-message\">Message text here.</p> </div> </div> </div> </div> </output> <code title=\"Output flash messages as a description list\"> <f:flashMessages as=\"flashMessages\"> <dl class=\"messages\"> <f:for each=\"{flashMessages}\" as=\"flashMessage\"> <dt>{flashMessage.code}</dt> <dd>{flashMessage.message}</dd> </f:for> </dl> </f:flashMessages> </code> <output> <dl class=\"messages\"> <dt>1013</dt> <dd>Some Warning Message.</dd> </dl> </output> <code title=\"Using a specific queue\"> <f:flashMessages queueIdentifier=\"myQueue\" /> </code> /",
      "attributes": [
        {
          "name": "${queueIdentifier:queueIdentifier}=\"$1\"",
          "description": "Flash-message queue to use",
          "valueSet": "v"
        },
        {
          "name": "queueIdentifier",
          "description": "Flash-message queue to use"
        },
        {
          "name": "${as:as}=\"$1\"",
          "description": "The name of the current flashMessage variable for rendering inside",
          "valueSet": "v"
        },
        {
          "name": "as",
          "description": "The name of the current flashMessage variable for rendering inside"
        }
      ]
    },
    {
      "name": "f:form",
      "description": "Form view helper. Generates a <form> Tag. = Basic usage = Use <f:form> to output an HTML <form> tag which is targeted at the specified action, in the current controller and package. It will submit the form data via a POST request. If you want to change this, use method=\"get\" as an argument. <code title=\"Example\"> <f:form action=\"...\">...</f:form> </code> = A complex form with a specified encoding type = <code title=\"Form with enctype set\"> <f:form action=\"..\" controller=\"...\" package=\"...\" enctype=\"multipart/form-data\">...</f:form> </code> = A Form which should render a domain object = <code title=\"Binding a domain object to a form\"> <f:form action=\"...\" name=\"customer\" object=\"{customer}\"> <f:form.hidden property=\"id\" /> <f:form.textbox property=\"name\" /> </f:form> </code> This automatically inserts the value of {customer.name} inside the textbox and adjusts the name of the textbox accordingly. /",
      "attributes": [
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${action:action}=\"$1\"",
          "description": "Target action",
          "valueSet": "v"
        },
        {
          "name": "action",
          "description": "Target action"
        },
        {
          "name": "${arguments:arguments}=\"$1\"",
          "description": "Arguments",
          "valueSet": "v"
        },
        {
          "name": "arguments",
          "description": "Arguments"
        },
        {
          "name": "${controller:controller}=\"$1\"",
          "description": "Target controller",
          "valueSet": "v"
        },
        {
          "name": "controller",
          "description": "Target controller"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "Target Extension Name (without \"tx_\" prefix and no underscores). If NULL the current extension name is used",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "Target Extension Name (without \"tx_\" prefix and no underscores). If NULL the current extension name is used"
        },
        {
          "name": "${pluginName:pluginName}=\"$1\"",
          "description": "Target plugin. If empty, the current plugin name is used",
          "valueSet": "v"
        },
        {
          "name": "pluginName",
          "description": "Target plugin. If empty, the current plugin name is used"
        },
        {
          "name": "${pageUid:pageUid}=\"$1\"",
          "description": "Target page uid",
          "valueSet": "v"
        },
        {
          "name": "pageUid",
          "description": "Target page uid"
        },
        {
          "name": "${object:object}=\"$1\"",
          "description": "Object to use for the form. Use in conjunction with the \"property\" attribute on the sub tags",
          "valueSet": "v"
        },
        {
          "name": "object",
          "description": "Object to use for the form. Use in conjunction with the \"property\" attribute on the sub tags"
        },
        {
          "name": "${pageType:pageType}=\"$1\"",
          "description": "Target page type",
          "valueSet": "v"
        },
        {
          "name": "pageType",
          "description": "Target page type"
        },
        {
          "name": "${noCache:noCache}=\"$1\"",
          "description": "set this to disable caching for the target page. You should not need this.",
          "valueSet": "v"
        },
        {
          "name": "noCache",
          "description": "set this to disable caching for the target page. You should not need this."
        },
        {
          "name": "${noCacheHash:noCacheHash}=\"$1\"",
          "description": "set this to suppress the cHash query parameter created by TypoLink. You should not need this.",
          "valueSet": "v"
        },
        {
          "name": "noCacheHash",
          "description": "set this to suppress the cHash query parameter created by TypoLink. You should not need this."
        },
        {
          "name": "${section:section}=\"$1\"",
          "description": "The anchor to be added to the action URI (only active if $actionUri is not set)",
          "valueSet": "v"
        },
        {
          "name": "section",
          "description": "The anchor to be added to the action URI (only active if $actionUri is not set)"
        },
        {
          "name": "${format:format}=\"$1\"",
          "description": "The requested format (e.g. \".html\") of the target page (only active if $actionUri is not set)",
          "valueSet": "v"
        },
        {
          "name": "format",
          "description": "The requested format (e.g. \".html\") of the target page (only active if $actionUri is not set)"
        },
        {
          "name": "${additionalParams:additionalParams}=\"$1\"",
          "description": "additional action URI query parameters that won't be prefixed like $arguments (overrule $arguments) (only active if $actionUri is not set)",
          "valueSet": "v"
        },
        {
          "name": "additionalParams",
          "description": "additional action URI query parameters that won't be prefixed like $arguments (overrule $arguments) (only active if $actionUri is not set)"
        },
        {
          "name": "${absolute:absolute}=\"$1\"",
          "description": "If set, an absolute action URI is rendered (only active if $actionUri is not set)",
          "valueSet": "v"
        },
        {
          "name": "absolute",
          "description": "If set, an absolute action URI is rendered (only active if $actionUri is not set)"
        },
        {
          "name": "${addQueryString:addQueryString}=\"$1\"",
          "description": "If set, the current query parameters will be kept in the action URI (only active if $actionUri is not set)",
          "valueSet": "v"
        },
        {
          "name": "addQueryString",
          "description": "If set, the current query parameters will be kept in the action URI (only active if $actionUri is not set)"
        },
        {
          "name": "${argumentsToBeExcludedFromQueryString:argumentsToBeExcludedFromQueryString}=\"$1\"",
          "description": "arguments to be removed from the action URI. Only active if $addQueryString = TRUE and $actionUri is not set",
          "valueSet": "v"
        },
        {
          "name": "argumentsToBeExcludedFromQueryString",
          "description": "arguments to be removed from the action URI. Only active if $addQueryString = TRUE and $actionUri is not set"
        },
        {
          "name": "${addQueryStringMethod:addQueryStringMethod}=\"$1\"",
          "description": "Method to use when keeping query parameters (GET or POST, only active if $actionUri is not set",
          "valueSet": "v"
        },
        {
          "name": "addQueryStringMethod",
          "description": "Method to use when keeping query parameters (GET or POST, only active if $actionUri is not set"
        },
        {
          "name": "${fieldNamePrefix:fieldNamePrefix}=\"$1\"",
          "description": "Prefix that will be added to all field names within this form. If not set the prefix will be tx_yourExtension_plugin",
          "valueSet": "v"
        },
        {
          "name": "fieldNamePrefix",
          "description": "Prefix that will be added to all field names within this form. If not set the prefix will be tx_yourExtension_plugin"
        },
        {
          "name": "${actionUri:actionUri}=\"$1\"",
          "description": "can be used to overwrite the \"action\" attribute of the form tag",
          "valueSet": "v"
        },
        {
          "name": "actionUri",
          "description": "can be used to overwrite the \"action\" attribute of the form tag"
        },
        {
          "name": "${objectName:objectName}=\"$1\"",
          "description": "name of the object that is bound to this form. If this argument is not specified, the name attribute of this form is used to determine the FormObjectName",
          "valueSet": "v"
        },
        {
          "name": "objectName",
          "description": "name of the object that is bound to this form. If this argument is not specified, the name attribute of this form is used to determine the FormObjectName"
        },
        {
          "name": "${hiddenFieldClassName:hiddenFieldClassName}=\"$1\"",
          "description": "hiddenFieldClassName",
          "valueSet": "v"
        },
        {
          "name": "hiddenFieldClassName",
          "description": "hiddenFieldClassName"
        },
        {
          "name": "${enctype:enctype}=\"$1\"",
          "description": "MIME type with which the form is submitted",
          "valueSet": "v"
        },
        {
          "name": "enctype",
          "description": "MIME type with which the form is submitted"
        },
        {
          "name": "${method:method}=\"$1\"",
          "description": "Transfer type (GET or POST)",
          "valueSet": "v"
        },
        {
          "name": "method",
          "description": "Transfer type (GET or POST)"
        },
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of form",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of form"
        },
        {
          "name": "${onreset:onreset}=\"$1\"",
          "description": "JavaScript: On reset of the form",
          "valueSet": "v"
        },
        {
          "name": "onreset",
          "description": "JavaScript: On reset of the form"
        },
        {
          "name": "${onsubmit:onsubmit}=\"$1\"",
          "description": "JavaScript: On submit of the form",
          "valueSet": "v"
        },
        {
          "name": "onsubmit",
          "description": "JavaScript: On submit of the form"
        },
        {
          "name": "${target:target}=\"$1\"",
          "description": "Target attribute of the form",
          "valueSet": "v"
        },
        {
          "name": "target",
          "description": "Target attribute of the form"
        },
        {
          "name": "${novalidate:novalidate}=\"$1\"",
          "description": "Indicate that the form is not to be validated on submit.",
          "valueSet": "v"
        },
        {
          "name": "novalidate",
          "description": "Indicate that the form is not to be validated on submit."
        },
        {
          "name": "${class:class}=\"$1\"",
          "description": "CSS class(es) for this element",
          "valueSet": "v"
        },
        {
          "name": "class",
          "description": "CSS class(es) for this element"
        },
        {
          "name": "${dir:dir}=\"$1\"",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)",
          "valueSet": "v"
        },
        {
          "name": "dir",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)"
        },
        {
          "name": "${id:id}=\"$1\"",
          "description": "Unique (in this file) identifier for this HTML element.",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "Unique (in this file) identifier for this HTML element."
        },
        {
          "name": "${lang:lang}=\"$1\"",
          "description": "Language for this element. Use short names specified in RFC 1766",
          "valueSet": "v"
        },
        {
          "name": "lang",
          "description": "Language for this element. Use short names specified in RFC 1766"
        },
        {
          "name": "${style:style}=\"$1\"",
          "description": "Individual CSS styles for this element",
          "valueSet": "v"
        },
        {
          "name": "style",
          "description": "Individual CSS styles for this element"
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "Tooltip text of element",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "Tooltip text of element"
        },
        {
          "name": "${accesskey:accesskey}=\"$1\"",
          "description": "Keyboard shortcut to access this element",
          "valueSet": "v"
        },
        {
          "name": "accesskey",
          "description": "Keyboard shortcut to access this element"
        },
        {
          "name": "${tabindex:tabindex}=\"$1\"",
          "description": "Specifies the tab order of this element",
          "valueSet": "v"
        },
        {
          "name": "tabindex",
          "description": "Specifies the tab order of this element"
        },
        {
          "name": "${onclick:onclick}=\"$1\"",
          "description": "JavaScript evaluated for the onclick event",
          "valueSet": "v"
        },
        {
          "name": "onclick",
          "description": "JavaScript evaluated for the onclick event"
        }
      ]
    },
    {
      "name": "f:form.button",
      "description": "Creates a button. = Examples = <code title=\"Defaults\"> <f:form.button>Send Mail</f:form.button> </code> <output> <button type=\"submit\" name=\"\" value=\"\">Send Mail</button> </output> <code title=\"Disabled cancel button with some HTML5 attributes\"> <f:form.button type=\"reset\" name=\"buttonName\" value=\"buttonValue\" disabled=\"disabled\" formmethod=\"post\" formnovalidate=\"formnovalidate\">Cancel</f:form.button> </code> <output> <button disabled=\"disabled\" formmethod=\"post\" formnovalidate=\"formnovalidate\" type=\"reset\" name=\"myForm[buttonName]\" value=\"buttonValue\">Cancel</button> </output> /",
      "attributes": [
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of input tag",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of input tag"
        },
        {
          "name": "${value:value}=\"$1\"",
          "description": "Value of input tag",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "Value of input tag"
        },
        {
          "name": "${property:property}=\"$1\"",
          "description": "Name of Object Property. If used in conjunction with <f:form object=\"...\">, \"name\" and \"value\" properties will be ignored.",
          "valueSet": "v"
        },
        {
          "name": "property",
          "description": "Name of Object Property. If used in conjunction with <f:form object=\"...\">, \"name\" and \"value\" properties will be ignored."
        },
        {
          "name": "${autofocus:autofocus}=\"$1\"",
          "description": "Specifies that a button should automatically get focus when the page loads",
          "valueSet": "v"
        },
        {
          "name": "autofocus",
          "description": "Specifies that a button should automatically get focus when the page loads"
        },
        {
          "name": "${disabled:disabled}=\"$1\"",
          "description": "Specifies that the input element should be disabled when the page loads",
          "valueSet": "v"
        },
        {
          "name": "disabled",
          "description": "Specifies that the input element should be disabled when the page loads"
        },
        {
          "name": "${form:form}=\"$1\"",
          "description": "Specifies one or more forms the button belongs to",
          "valueSet": "v"
        },
        {
          "name": "form",
          "description": "Specifies one or more forms the button belongs to"
        },
        {
          "name": "${formaction:formaction}=\"$1\"",
          "description": "Specifies where to send the form-data when a form is submitted. Only for type=\"submit\"",
          "valueSet": "v"
        },
        {
          "name": "formaction",
          "description": "Specifies where to send the form-data when a form is submitted. Only for type=\"submit\""
        },
        {
          "name": "${formenctype:formenctype}=\"$1\"",
          "description": "Specifies how form-data should be encoded before sending it to a server. Only for type=\"submit\" (e.g. \"application/x-www-form-urlencoded\", \"multipart/form-data\" or \"text/plain\")",
          "valueSet": "v"
        },
        {
          "name": "formenctype",
          "description": "Specifies how form-data should be encoded before sending it to a server. Only for type=\"submit\" (e.g. \"application/x-www-form-urlencoded\", \"multipart/form-data\" or \"text/plain\")"
        },
        {
          "name": "${formmethod:formmethod}=\"$1\"",
          "description": "Specifies how to send the form-data (which HTTP method to use). Only for type=\"submit\" (e.g. \"get\" or \"post\")",
          "valueSet": "v"
        },
        {
          "name": "formmethod",
          "description": "Specifies how to send the form-data (which HTTP method to use). Only for type=\"submit\" (e.g. \"get\" or \"post\")"
        },
        {
          "name": "${formnovalidate:formnovalidate}=\"$1\"",
          "description": "Specifies that the form-data should not be validated on submission. Only for type=\"submit\"",
          "valueSet": "v"
        },
        {
          "name": "formnovalidate",
          "description": "Specifies that the form-data should not be validated on submission. Only for type=\"submit\""
        },
        {
          "name": "${formtarget:formtarget}=\"$1\"",
          "description": "Specifies where to display the response after submitting the form. Only for type=\"submit\" (e.g. \"_blank\", \"_self\", \"_parent\", \"_top\", \"framename\")",
          "valueSet": "v"
        },
        {
          "name": "formtarget",
          "description": "Specifies where to display the response after submitting the form. Only for type=\"submit\" (e.g. \"_blank\", \"_self\", \"_parent\", \"_top\", \"framename\")"
        },
        {
          "name": "${class:class}=\"$1\"",
          "description": "CSS class(es) for this element",
          "valueSet": "v"
        },
        {
          "name": "class",
          "description": "CSS class(es) for this element"
        },
        {
          "name": "${dir:dir}=\"$1\"",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)",
          "valueSet": "v"
        },
        {
          "name": "dir",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)"
        },
        {
          "name": "${id:id}=\"$1\"",
          "description": "Unique (in this file) identifier for this HTML element.",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "Unique (in this file) identifier for this HTML element."
        },
        {
          "name": "${lang:lang}=\"$1\"",
          "description": "Language for this element. Use short names specified in RFC 1766",
          "valueSet": "v"
        },
        {
          "name": "lang",
          "description": "Language for this element. Use short names specified in RFC 1766"
        },
        {
          "name": "${style:style}=\"$1\"",
          "description": "Individual CSS styles for this element",
          "valueSet": "v"
        },
        {
          "name": "style",
          "description": "Individual CSS styles for this element"
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "Tooltip text of element",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "Tooltip text of element"
        },
        {
          "name": "${accesskey:accesskey}=\"$1\"",
          "description": "Keyboard shortcut to access this element",
          "valueSet": "v"
        },
        {
          "name": "accesskey",
          "description": "Keyboard shortcut to access this element"
        },
        {
          "name": "${tabindex:tabindex}=\"$1\"",
          "description": "Specifies the tab order of this element",
          "valueSet": "v"
        },
        {
          "name": "tabindex",
          "description": "Specifies the tab order of this element"
        },
        {
          "name": "${onclick:onclick}=\"$1\"",
          "description": "JavaScript evaluated for the onclick event",
          "valueSet": "v"
        },
        {
          "name": "onclick",
          "description": "JavaScript evaluated for the onclick event"
        },
        {
          "name": "${type:type}=\"$1\"",
          "description": "Specifies the type of button (e.g. \"button\", \"reset\" or \"submit\")",
          "valueSet": "v"
        },
        {
          "name": "type",
          "description": "Specifies the type of button (e.g. \"button\", \"reset\" or \"submit\")"
        }
      ]
    },
    {
      "name": "f:form.checkbox",
      "description": "View Helper which creates a simple checkbox (<input type=\"checkbox\">). = Examples = <code title=\"Example\"> <f:form.checkbox name=\"myCheckBox\" value=\"someValue\" /> </code> <output> <input type=\"checkbox\" name=\"myCheckBox\" value=\"someValue\" /> </output> <code title=\"Preselect\"> <f:form.checkbox name=\"myCheckBox\" value=\"someValue\" checked=\"{object.value} == 5\" /> </code> <output> <input type=\"checkbox\" name=\"myCheckBox\" value=\"someValue\" checked=\"checked\" /> (depending on $object) </output> <code title=\"Bind to object property\"> <f:form.checkbox property=\"interests\" value=\"TYPO3\" /> </code> <output> <input type=\"checkbox\" name=\"user[interests][]\" value=\"TYPO3\" checked=\"checked\" /> (depending on property \"interests\") </output> /",
      "attributes": [
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of input tag",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of input tag"
        },
        {
          "name": "${value:value}=\"$1\"",
          "description": "Value of input tag. Required for checkboxes",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "Value of input tag. Required for checkboxes"
        },
        {
          "name": "${property:property}=\"$1\"",
          "description": "Name of Object Property. If used in conjunction with <f:form object=\"...\">, \"name\" and \"value\" properties will be ignored.",
          "valueSet": "v"
        },
        {
          "name": "property",
          "description": "Name of Object Property. If used in conjunction with <f:form object=\"...\">, \"name\" and \"value\" properties will be ignored."
        },
        {
          "name": "${disabled:disabled}=\"$1\"",
          "description": "Specifies that the input element should be disabled when the page loads",
          "valueSet": "v"
        },
        {
          "name": "disabled",
          "description": "Specifies that the input element should be disabled when the page loads"
        },
        {
          "name": "${errorClass:errorClass}=\"$1\"",
          "description": "CSS class to set if there are errors for this view helper",
          "valueSet": "v"
        },
        {
          "name": "errorClass",
          "description": "CSS class to set if there are errors for this view helper"
        },
        {
          "name": "${class:class}=\"$1\"",
          "description": "CSS class(es) for this element",
          "valueSet": "v"
        },
        {
          "name": "class",
          "description": "CSS class(es) for this element"
        },
        {
          "name": "${dir:dir}=\"$1\"",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)",
          "valueSet": "v"
        },
        {
          "name": "dir",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)"
        },
        {
          "name": "${id:id}=\"$1\"",
          "description": "Unique (in this file) identifier for this HTML element.",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "Unique (in this file) identifier for this HTML element."
        },
        {
          "name": "${lang:lang}=\"$1\"",
          "description": "Language for this element. Use short names specified in RFC 1766",
          "valueSet": "v"
        },
        {
          "name": "lang",
          "description": "Language for this element. Use short names specified in RFC 1766"
        },
        {
          "name": "${style:style}=\"$1\"",
          "description": "Individual CSS styles for this element",
          "valueSet": "v"
        },
        {
          "name": "style",
          "description": "Individual CSS styles for this element"
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "Tooltip text of element",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "Tooltip text of element"
        },
        {
          "name": "${accesskey:accesskey}=\"$1\"",
          "description": "Keyboard shortcut to access this element",
          "valueSet": "v"
        },
        {
          "name": "accesskey",
          "description": "Keyboard shortcut to access this element"
        },
        {
          "name": "${tabindex:tabindex}=\"$1\"",
          "description": "Specifies the tab order of this element",
          "valueSet": "v"
        },
        {
          "name": "tabindex",
          "description": "Specifies the tab order of this element"
        },
        {
          "name": "${onclick:onclick}=\"$1\"",
          "description": "JavaScript evaluated for the onclick event",
          "valueSet": "v"
        },
        {
          "name": "onclick",
          "description": "JavaScript evaluated for the onclick event"
        },
        {
          "name": "${checked:checked}=\"$1\"",
          "description": "Specifies that the input element should be preselected",
          "valueSet": "v"
        },
        {
          "name": "checked",
          "description": "Specifies that the input element should be preselected"
        },
        {
          "name": "${multiple:multiple}=\"$1\"",
          "description": "Specifies whether this checkbox belongs to a multivalue (is part of a checkbox group)",
          "valueSet": "v"
        },
        {
          "name": "multiple",
          "description": "Specifies whether this checkbox belongs to a multivalue (is part of a checkbox group)"
        }
      ]
    },
    {
      "name": "f:form.hidden",
      "description": "Renders an <input type=\"hidden\" ...> tag. = Examples = <code title=\"Example\"> <f:form.hidden name=\"myHiddenValue\" value=\"42\" /> </code> <output> <input type=\"hidden\" name=\"myHiddenValue\" value=\"42\" /> </output> You can also use the \"property\" attribute if you have bound an object to the form. See <f:form> for more documentation. /",
      "attributes": [
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of input tag",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of input tag"
        },
        {
          "name": "${value:value}=\"$1\"",
          "description": "Value of input tag",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "Value of input tag"
        },
        {
          "name": "${property:property}=\"$1\"",
          "description": "Name of Object Property. If used in conjunction with <f:form object=\"...\">, \"name\" and \"value\" properties will be ignored.",
          "valueSet": "v"
        },
        {
          "name": "property",
          "description": "Name of Object Property. If used in conjunction with <f:form object=\"...\">, \"name\" and \"value\" properties will be ignored."
        },
        {
          "name": "${class:class}=\"$1\"",
          "description": "CSS class(es) for this element",
          "valueSet": "v"
        },
        {
          "name": "class",
          "description": "CSS class(es) for this element"
        },
        {
          "name": "${dir:dir}=\"$1\"",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)",
          "valueSet": "v"
        },
        {
          "name": "dir",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)"
        },
        {
          "name": "${id:id}=\"$1\"",
          "description": "Unique (in this file) identifier for this HTML element.",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "Unique (in this file) identifier for this HTML element."
        },
        {
          "name": "${lang:lang}=\"$1\"",
          "description": "Language for this element. Use short names specified in RFC 1766",
          "valueSet": "v"
        },
        {
          "name": "lang",
          "description": "Language for this element. Use short names specified in RFC 1766"
        },
        {
          "name": "${style:style}=\"$1\"",
          "description": "Individual CSS styles for this element",
          "valueSet": "v"
        },
        {
          "name": "style",
          "description": "Individual CSS styles for this element"
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "Tooltip text of element",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "Tooltip text of element"
        },
        {
          "name": "${accesskey:accesskey}=\"$1\"",
          "description": "Keyboard shortcut to access this element",
          "valueSet": "v"
        },
        {
          "name": "accesskey",
          "description": "Keyboard shortcut to access this element"
        },
        {
          "name": "${tabindex:tabindex}=\"$1\"",
          "description": "Specifies the tab order of this element",
          "valueSet": "v"
        },
        {
          "name": "tabindex",
          "description": "Specifies the tab order of this element"
        },
        {
          "name": "${onclick:onclick}=\"$1\"",
          "description": "JavaScript evaluated for the onclick event",
          "valueSet": "v"
        },
        {
          "name": "onclick",
          "description": "JavaScript evaluated for the onclick event"
        }
      ]
    },
    {
      "name": "f:form.password",
      "description": "View Helper which creates a simple Password Text Box (<input type=\"password\">). = Examples = <code title=\"Example\"> <f:form.password name=\"myPassword\" /> </code> <output> <input type=\"password\" name=\"myPassword\" value=\"default value\" /> </output> /",
      "attributes": [
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of input tag",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of input tag"
        },
        {
          "name": "${value:value}=\"$1\"",
          "description": "Value of input tag",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "Value of input tag"
        },
        {
          "name": "${property:property}=\"$1\"",
          "description": "Name of Object Property. If used in conjunction with <f:form object=\"...\">, \"name\" and \"value\" properties will be ignored.",
          "valueSet": "v"
        },
        {
          "name": "property",
          "description": "Name of Object Property. If used in conjunction with <f:form object=\"...\">, \"name\" and \"value\" properties will be ignored."
        },
        {
          "name": "${disabled:disabled}=\"$1\"",
          "description": "Specifies that the input element should be disabled when the page loads",
          "valueSet": "v"
        },
        {
          "name": "disabled",
          "description": "Specifies that the input element should be disabled when the page loads"
        },
        {
          "name": "${maxlength:maxlength}=\"$1\"",
          "description": "The maxlength attribute of the input field (will not be validated)",
          "valueSet": "v"
        },
        {
          "name": "maxlength",
          "description": "The maxlength attribute of the input field (will not be validated)"
        },
        {
          "name": "${placeholder:placeholder}=\"$1\"",
          "description": "The placeholder of the textfield",
          "valueSet": "v"
        },
        {
          "name": "placeholder",
          "description": "The placeholder of the textfield"
        },
        {
          "name": "${readonly:readonly}=\"$1\"",
          "description": "The readonly attribute of the input field",
          "valueSet": "v"
        },
        {
          "name": "readonly",
          "description": "The readonly attribute of the input field"
        },
        {
          "name": "${size:size}=\"$1\"",
          "description": "The size of the input field",
          "valueSet": "v"
        },
        {
          "name": "size",
          "description": "The size of the input field"
        },
        {
          "name": "${errorClass:errorClass}=\"$1\"",
          "description": "CSS class to set if there are errors for this view helper",
          "valueSet": "v"
        },
        {
          "name": "errorClass",
          "description": "CSS class to set if there are errors for this view helper"
        },
        {
          "name": "${class:class}=\"$1\"",
          "description": "CSS class(es) for this element",
          "valueSet": "v"
        },
        {
          "name": "class",
          "description": "CSS class(es) for this element"
        },
        {
          "name": "${dir:dir}=\"$1\"",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)",
          "valueSet": "v"
        },
        {
          "name": "dir",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)"
        },
        {
          "name": "${id:id}=\"$1\"",
          "description": "Unique (in this file) identifier for this HTML element.",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "Unique (in this file) identifier for this HTML element."
        },
        {
          "name": "${lang:lang}=\"$1\"",
          "description": "Language for this element. Use short names specified in RFC 1766",
          "valueSet": "v"
        },
        {
          "name": "lang",
          "description": "Language for this element. Use short names specified in RFC 1766"
        },
        {
          "name": "${style:style}=\"$1\"",
          "description": "Individual CSS styles for this element",
          "valueSet": "v"
        },
        {
          "name": "style",
          "description": "Individual CSS styles for this element"
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "Tooltip text of element",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "Tooltip text of element"
        },
        {
          "name": "${accesskey:accesskey}=\"$1\"",
          "description": "Keyboard shortcut to access this element",
          "valueSet": "v"
        },
        {
          "name": "accesskey",
          "description": "Keyboard shortcut to access this element"
        },
        {
          "name": "${tabindex:tabindex}=\"$1\"",
          "description": "Specifies the tab order of this element",
          "valueSet": "v"
        },
        {
          "name": "tabindex",
          "description": "Specifies the tab order of this element"
        },
        {
          "name": "${onclick:onclick}=\"$1\"",
          "description": "JavaScript evaluated for the onclick event",
          "valueSet": "v"
        },
        {
          "name": "onclick",
          "description": "JavaScript evaluated for the onclick event"
        }
      ]
    },
    {
      "name": "f:form.radio",
      "description": "View Helper which creates a simple radio button (<input type=\"radio\">). = Examples = <code title=\"Example\"> <f:form.radio name=\"myRadioButton\" value=\"someValue\" /> </code> <output> <input type=\"radio\" name=\"myRadioButton\" value=\"someValue\" /> </output> <code title=\"Preselect\"> <f:form.radio name=\"myRadioButton\" value=\"someValue\" checked=\"{object.value} == 5\" /> </code> <output> <input type=\"radio\" name=\"myRadioButton\" value=\"someValue\" checked=\"checked\" /> (depending on $object) </output> <code title=\"Bind to object property\"> <f:form.radio property=\"newsletter\" value=\"1\" /> yes <f:form.radio property=\"newsletter\" value=\"0\" /> no </code> <output> <input type=\"radio\" name=\"user[newsletter]\" value=\"1\" checked=\"checked\" /> yes <input type=\"radio\" name=\"user[newsletter]\" value=\"0\" /> no (depending on property \"newsletter\") </output> /",
      "attributes": [
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of input tag",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of input tag"
        },
        {
          "name": "${value:value}=\"$1\"",
          "description": "Value of input tag. Required for radio buttons",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "Value of input tag. Required for radio buttons"
        },
        {
          "name": "${property:property}=\"$1\"",
          "description": "Name of Object Property. If used in conjunction with <f:form object=\"...\">, \"name\" and \"value\" properties will be ignored.",
          "valueSet": "v"
        },
        {
          "name": "property",
          "description": "Name of Object Property. If used in conjunction with <f:form object=\"...\">, \"name\" and \"value\" properties will be ignored."
        },
        {
          "name": "${errorClass:errorClass}=\"$1\"",
          "description": "CSS class to set if there are errors for this view helper",
          "valueSet": "v"
        },
        {
          "name": "errorClass",
          "description": "CSS class to set if there are errors for this view helper"
        },
        {
          "name": "${checked:checked}=\"$1\"",
          "description": "Specifies that the input element should be preselected",
          "valueSet": "v"
        },
        {
          "name": "checked",
          "description": "Specifies that the input element should be preselected"
        },
        {
          "name": "${class:class}=\"$1\"",
          "description": "CSS class(es) for this element",
          "valueSet": "v"
        },
        {
          "name": "class",
          "description": "CSS class(es) for this element"
        },
        {
          "name": "${dir:dir}=\"$1\"",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)",
          "valueSet": "v"
        },
        {
          "name": "dir",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)"
        },
        {
          "name": "${id:id}=\"$1\"",
          "description": "Unique (in this file) identifier for this HTML element.",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "Unique (in this file) identifier for this HTML element."
        },
        {
          "name": "${lang:lang}=\"$1\"",
          "description": "Language for this element. Use short names specified in RFC 1766",
          "valueSet": "v"
        },
        {
          "name": "lang",
          "description": "Language for this element. Use short names specified in RFC 1766"
        },
        {
          "name": "${style:style}=\"$1\"",
          "description": "Individual CSS styles for this element",
          "valueSet": "v"
        },
        {
          "name": "style",
          "description": "Individual CSS styles for this element"
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "Tooltip text of element",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "Tooltip text of element"
        },
        {
          "name": "${accesskey:accesskey}=\"$1\"",
          "description": "Keyboard shortcut to access this element",
          "valueSet": "v"
        },
        {
          "name": "accesskey",
          "description": "Keyboard shortcut to access this element"
        },
        {
          "name": "${tabindex:tabindex}=\"$1\"",
          "description": "Specifies the tab order of this element",
          "valueSet": "v"
        },
        {
          "name": "tabindex",
          "description": "Specifies the tab order of this element"
        },
        {
          "name": "${onclick:onclick}=\"$1\"",
          "description": "JavaScript evaluated for the onclick event",
          "valueSet": "v"
        },
        {
          "name": "onclick",
          "description": "JavaScript evaluated for the onclick event"
        },
        {
          "name": "${disabled:disabled}=\"$1\"",
          "description": "Specifies that the input element should be disabled when the page loads",
          "valueSet": "v"
        },
        {
          "name": "disabled",
          "description": "Specifies that the input element should be disabled when the page loads"
        }
      ]
    },
    {
      "name": "f:form.select",
      "description": "This view helper generates a <select> dropdown list for the use with a form. = Basic usage = The most straightforward way is to supply an associative array as the \"options\" parameter. The array key is used as option key, and the value is used as human-readable name. <code title=\"Basic usage\"> <f:form.select name=\"paymentOptions\" options=\"{payPal: 'PayPal International Services', visa: 'VISA Card'}\" /> </code> = Pre-select a value = To pre-select a value, set \"value\" to the option key which should be selected. <code title=\"Default value\"> <f:form.select name=\"paymentOptions\" options=\"{payPal: 'PayPal International Services', visa: 'VISA Card'}\" value=\"visa\" /> </code> Generates a dropdown box like above, except that \"VISA Card\" is selected. If the select box is a multi-select box (multiple=\"1\"), then \"value\" can be an array as well. = Custom options and option group rendering = Child nodes can be used to create a completely custom set of ``<option>`` and ``<optgroup>`` tags in a way compatible with the HMAC generation. To do so, leave out the ``options`` argument and use child ViewHelpers: <code title=\"Custom options and optgroup\"> <f:form.select name=\"myproperty\"> <f:form.select.option value=\"1\">Option one</f:form.select.option> <f:form.select.option value=\"2\">Option two</f:form.select.option> <f:form.select.optgroup> <f:form.select.option value=\"3\">Grouped option one</f:form.select.option> <f:form.select.option value=\"4\">Grouped option twi</f:form.select.option> </f:form.select.optgroup> </f:form.select> </code> Note: do not use vanilla ``<option>`` or ``<optgroup>`` tags! They will invalidate the HMAC generation! = Usage on domain objects = If you want to output domain objects, you can just pass them as array into the \"options\" parameter. To define what domain object value should be used as option key, use the \"optionValueField\" variable. Same goes for optionLabelField. If neither is given, the Identifier (UID/uid) and the __toString() method are tried as fallbacks. If the optionValueField variable is set, the getter named after that value is used to retrieve the option key. If the optionLabelField variable is set, the getter named after that value is used to retrieve the option value. If the prependOptionLabel variable is set, an option item is added in first position, bearing an empty string or - If provided, the value of the prependOptionValue variable as value. <code title=\"Domain objects\"> <f:form.select name=\"users\" options=\"{userArray}\" optionValueField=\"id\" optionLabelField=\"firstName\" /> </code> In the above example, the userArray is an array of \"User\" domain objects, with no array key specified. So, in the above example, the method $user->getId() is called to retrieve the key, and $user->getFirstName() to retrieve the displayed value of each entry. The \"value\" property now expects a domain object, and tests for object equivalence. /",
      "attributes": [
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of input tag",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of input tag"
        },
        {
          "name": "${value:value}=\"$1\"",
          "description": "Value of input tag",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "Value of input tag"
        },
        {
          "name": "${property:property}=\"$1\"",
          "description": "Name of Object Property. If used in conjunction with <f:form object=\"...\">, \"name\" and \"value\" properties will be ignored.",
          "valueSet": "v"
        },
        {
          "name": "property",
          "description": "Name of Object Property. If used in conjunction with <f:form object=\"...\">, \"name\" and \"value\" properties will be ignored."
        },
        {
          "name": "${class:class}=\"$1\"",
          "description": "CSS class(es) for this element",
          "valueSet": "v"
        },
        {
          "name": "class",
          "description": "CSS class(es) for this element"
        },
        {
          "name": "${dir:dir}=\"$1\"",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)",
          "valueSet": "v"
        },
        {
          "name": "dir",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)"
        },
        {
          "name": "${id:id}=\"$1\"",
          "description": "Unique (in this file) identifier for this HTML element.",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "Unique (in this file) identifier for this HTML element."
        },
        {
          "name": "${lang:lang}=\"$1\"",
          "description": "Language for this element. Use short names specified in RFC 1766",
          "valueSet": "v"
        },
        {
          "name": "lang",
          "description": "Language for this element. Use short names specified in RFC 1766"
        },
        {
          "name": "${style:style}=\"$1\"",
          "description": "Individual CSS styles for this element",
          "valueSet": "v"
        },
        {
          "name": "style",
          "description": "Individual CSS styles for this element"
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "Tooltip text of element",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "Tooltip text of element"
        },
        {
          "name": "${accesskey:accesskey}=\"$1\"",
          "description": "Keyboard shortcut to access this element",
          "valueSet": "v"
        },
        {
          "name": "accesskey",
          "description": "Keyboard shortcut to access this element"
        },
        {
          "name": "${tabindex:tabindex}=\"$1\"",
          "description": "Specifies the tab order of this element",
          "valueSet": "v"
        },
        {
          "name": "tabindex",
          "description": "Specifies the tab order of this element"
        },
        {
          "name": "${onclick:onclick}=\"$1\"",
          "description": "JavaScript evaluated for the onclick event",
          "valueSet": "v"
        },
        {
          "name": "onclick",
          "description": "JavaScript evaluated for the onclick event"
        },
        {
          "name": "${size:size}=\"$1\"",
          "description": "Size of input field",
          "valueSet": "v"
        },
        {
          "name": "size",
          "description": "Size of input field"
        },
        {
          "name": "${disabled:disabled}=\"$1\"",
          "description": "Specifies that the input element should be disabled when the page loads",
          "valueSet": "v"
        },
        {
          "name": "disabled",
          "description": "Specifies that the input element should be disabled when the page loads"
        },
        {
          "name": "${options:options}=\"$1\"",
          "description": "Associative array with internal IDs as key, and the values are displayed in the select box. Can be combined with or replaced by child f:form.select.* nodes.",
          "valueSet": "v"
        },
        {
          "name": "options",
          "description": "Associative array with internal IDs as key, and the values are displayed in the select box. Can be combined with or replaced by child f:form.select.* nodes."
        },
        {
          "name": "${optionsAfterContent:optionsAfterContent}=\"$1\"",
          "description": "If true, places auto-generated option tags after those rendered in the tag content. If false, automatic options come first.",
          "valueSet": "v"
        },
        {
          "name": "optionsAfterContent",
          "description": "If true, places auto-generated option tags after those rendered in the tag content. If false, automatic options come first."
        },
        {
          "name": "${optionValueField:optionValueField}=\"$1\"",
          "description": "If specified, will call the appropriate getter on each object to determine the value.",
          "valueSet": "v"
        },
        {
          "name": "optionValueField",
          "description": "If specified, will call the appropriate getter on each object to determine the value."
        },
        {
          "name": "${optionLabelField:optionLabelField}=\"$1\"",
          "description": "If specified, will call the appropriate getter on each object to determine the label.",
          "valueSet": "v"
        },
        {
          "name": "optionLabelField",
          "description": "If specified, will call the appropriate getter on each object to determine the label."
        },
        {
          "name": "${sortByOptionLabel:sortByOptionLabel}=\"$1\"",
          "description": "If true, List will be sorted by label.",
          "valueSet": "v"
        },
        {
          "name": "sortByOptionLabel",
          "description": "If true, List will be sorted by label."
        },
        {
          "name": "${selectAllByDefault:selectAllByDefault}=\"$1\"",
          "description": "If specified options are selected if none was set before.",
          "valueSet": "v"
        },
        {
          "name": "selectAllByDefault",
          "description": "If specified options are selected if none was set before."
        },
        {
          "name": "${errorClass:errorClass}=\"$1\"",
          "description": "CSS class to set if there are errors for this view helper",
          "valueSet": "v"
        },
        {
          "name": "errorClass",
          "description": "CSS class to set if there are errors for this view helper"
        },
        {
          "name": "${prependOptionLabel:prependOptionLabel}=\"$1\"",
          "description": "If specified, will provide an option at first position with the specified label.",
          "valueSet": "v"
        },
        {
          "name": "prependOptionLabel",
          "description": "If specified, will provide an option at first position with the specified label."
        },
        {
          "name": "${prependOptionValue:prependOptionValue}=\"$1\"",
          "description": "If specified, will provide an option at first position with the specified value.",
          "valueSet": "v"
        },
        {
          "name": "prependOptionValue",
          "description": "If specified, will provide an option at first position with the specified value."
        },
        {
          "name": "${multiple:multiple}=\"$1\"",
          "description": "If set multiple options may be selected.",
          "valueSet": "v"
        },
        {
          "name": "multiple",
          "description": "If set multiple options may be selected."
        },
        {
          "name": "${required:required}=\"$1\"",
          "description": "If set no empty value is allowed.",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "If set no empty value is allowed."
        }
      ]
    },
    {
      "name": "f:form.select.optgroup",
      "description": "Adds custom `<optgroup>` tags inside an `<f:form.select>`, supports further child `<f:form.select.option>` tags. /",
      "attributes": [
        {
          "name": "${class:class}=\"$1\"",
          "description": "CSS class(es) for this element",
          "valueSet": "v"
        },
        {
          "name": "class",
          "description": "CSS class(es) for this element"
        },
        {
          "name": "${dir:dir}=\"$1\"",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)",
          "valueSet": "v"
        },
        {
          "name": "dir",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)"
        },
        {
          "name": "${id:id}=\"$1\"",
          "description": "Unique (in this file) identifier for this HTML element.",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "Unique (in this file) identifier for this HTML element."
        },
        {
          "name": "${lang:lang}=\"$1\"",
          "description": "Language for this element. Use short names specified in RFC 1766",
          "valueSet": "v"
        },
        {
          "name": "lang",
          "description": "Language for this element. Use short names specified in RFC 1766"
        },
        {
          "name": "${style:style}=\"$1\"",
          "description": "Individual CSS styles for this element",
          "valueSet": "v"
        },
        {
          "name": "style",
          "description": "Individual CSS styles for this element"
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "Tooltip text of element",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "Tooltip text of element"
        },
        {
          "name": "${accesskey:accesskey}=\"$1\"",
          "description": "Keyboard shortcut to access this element",
          "valueSet": "v"
        },
        {
          "name": "accesskey",
          "description": "Keyboard shortcut to access this element"
        },
        {
          "name": "${tabindex:tabindex}=\"$1\"",
          "description": "Specifies the tab order of this element",
          "valueSet": "v"
        },
        {
          "name": "tabindex",
          "description": "Specifies the tab order of this element"
        },
        {
          "name": "${onclick:onclick}=\"$1\"",
          "description": "JavaScript evaluated for the onclick event",
          "valueSet": "v"
        },
        {
          "name": "onclick",
          "description": "JavaScript evaluated for the onclick event"
        },
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Human-readable label property for the generated optgroup tag",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Human-readable label property for the generated optgroup tag"
        },
        {
          "name": "${disabled:disabled}=\"$1\"",
          "description": "If true, option group is rendered as disabled",
          "valueSet": "v"
        },
        {
          "name": "disabled",
          "description": "If true, option group is rendered as disabled"
        }
      ]
    },
    {
      "name": "f:form.select.option",
      "description": "Adds custom `<option>` tags inside an `<f:form.select>` /",
      "attributes": [
        {
          "name": "${class:class}=\"$1\"",
          "description": "CSS class(es) for this element",
          "valueSet": "v"
        },
        {
          "name": "class",
          "description": "CSS class(es) for this element"
        },
        {
          "name": "${dir:dir}=\"$1\"",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)",
          "valueSet": "v"
        },
        {
          "name": "dir",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)"
        },
        {
          "name": "${id:id}=\"$1\"",
          "description": "Unique (in this file) identifier for this HTML element.",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "Unique (in this file) identifier for this HTML element."
        },
        {
          "name": "${lang:lang}=\"$1\"",
          "description": "Language for this element. Use short names specified in RFC 1766",
          "valueSet": "v"
        },
        {
          "name": "lang",
          "description": "Language for this element. Use short names specified in RFC 1766"
        },
        {
          "name": "${style:style}=\"$1\"",
          "description": "Individual CSS styles for this element",
          "valueSet": "v"
        },
        {
          "name": "style",
          "description": "Individual CSS styles for this element"
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "Tooltip text of element",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "Tooltip text of element"
        },
        {
          "name": "${accesskey:accesskey}=\"$1\"",
          "description": "Keyboard shortcut to access this element",
          "valueSet": "v"
        },
        {
          "name": "accesskey",
          "description": "Keyboard shortcut to access this element"
        },
        {
          "name": "${tabindex:tabindex}=\"$1\"",
          "description": "Specifies the tab order of this element",
          "valueSet": "v"
        },
        {
          "name": "tabindex",
          "description": "Specifies the tab order of this element"
        },
        {
          "name": "${onclick:onclick}=\"$1\"",
          "description": "JavaScript evaluated for the onclick event",
          "valueSet": "v"
        },
        {
          "name": "onclick",
          "description": "JavaScript evaluated for the onclick event"
        },
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${value:value}=\"$1\"",
          "description": "Value to be inserted in HTML tag - must be convertible to string!",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "Value to be inserted in HTML tag - must be convertible to string!"
        },
        {
          "name": "${selected:selected}=\"$1\"",
          "description": "If filled, overrides automatic detection of selected state for this option",
          "valueSet": "v"
        },
        {
          "name": "selected",
          "description": "If filled, overrides automatic detection of selected state for this option"
        }
      ]
    },
    {
      "name": "f:form.submit",
      "description": "Creates a submit button. = Examples = <code title=\"Defaults\"> <f:form.submit value=\"Send Mail\" /> </code> <output> <input type=\"submit\" /> </output> <code title=\"Dummy content for template preview\"> <f:submit name=\"mySubmit\" value=\"Send Mail\"><button>dummy button</button></f:submit> </code> <output> <input type=\"submit\" name=\"mySubmit\" value=\"Send Mail\" /> </output> /",
      "attributes": [
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of input tag",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of input tag"
        },
        {
          "name": "${value:value}=\"$1\"",
          "description": "Value of input tag",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "Value of input tag"
        },
        {
          "name": "${property:property}=\"$1\"",
          "description": "Name of Object Property. If used in conjunction with <f:form object=\"...\">, \"name\" and \"value\" properties will be ignored.",
          "valueSet": "v"
        },
        {
          "name": "property",
          "description": "Name of Object Property. If used in conjunction with <f:form object=\"...\">, \"name\" and \"value\" properties will be ignored."
        },
        {
          "name": "${disabled:disabled}=\"$1\"",
          "description": "Specifies that the input element should be disabled when the page loads",
          "valueSet": "v"
        },
        {
          "name": "disabled",
          "description": "Specifies that the input element should be disabled when the page loads"
        },
        {
          "name": "${class:class}=\"$1\"",
          "description": "CSS class(es) for this element",
          "valueSet": "v"
        },
        {
          "name": "class",
          "description": "CSS class(es) for this element"
        },
        {
          "name": "${dir:dir}=\"$1\"",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)",
          "valueSet": "v"
        },
        {
          "name": "dir",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)"
        },
        {
          "name": "${id:id}=\"$1\"",
          "description": "Unique (in this file) identifier for this HTML element.",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "Unique (in this file) identifier for this HTML element."
        },
        {
          "name": "${lang:lang}=\"$1\"",
          "description": "Language for this element. Use short names specified in RFC 1766",
          "valueSet": "v"
        },
        {
          "name": "lang",
          "description": "Language for this element. Use short names specified in RFC 1766"
        },
        {
          "name": "${style:style}=\"$1\"",
          "description": "Individual CSS styles for this element",
          "valueSet": "v"
        },
        {
          "name": "style",
          "description": "Individual CSS styles for this element"
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "Tooltip text of element",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "Tooltip text of element"
        },
        {
          "name": "${accesskey:accesskey}=\"$1\"",
          "description": "Keyboard shortcut to access this element",
          "valueSet": "v"
        },
        {
          "name": "accesskey",
          "description": "Keyboard shortcut to access this element"
        },
        {
          "name": "${tabindex:tabindex}=\"$1\"",
          "description": "Specifies the tab order of this element",
          "valueSet": "v"
        },
        {
          "name": "tabindex",
          "description": "Specifies the tab order of this element"
        },
        {
          "name": "${onclick:onclick}=\"$1\"",
          "description": "JavaScript evaluated for the onclick event",
          "valueSet": "v"
        },
        {
          "name": "onclick",
          "description": "JavaScript evaluated for the onclick event"
        }
      ]
    },
    {
      "name": "f:form.textarea",
      "description": "Textarea view helper. The value of the text area needs to be set via the \"value\" attribute, as with all other form ViewHelpers. = Examples = <code title=\"Example\"> <f:form.textarea name=\"myTextArea\" value=\"This is shown inside the textarea\" /> </code> <output> <textarea name=\"myTextArea\">This is shown inside the textarea</textarea> </output> /",
      "attributes": [
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of input tag",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of input tag"
        },
        {
          "name": "${value:value}=\"$1\"",
          "description": "Value of input tag",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "Value of input tag"
        },
        {
          "name": "${property:property}=\"$1\"",
          "description": "Name of Object Property. If used in conjunction with <f:form object=\"...\">, \"name\" and \"value\" properties will be ignored.",
          "valueSet": "v"
        },
        {
          "name": "property",
          "description": "Name of Object Property. If used in conjunction with <f:form object=\"...\">, \"name\" and \"value\" properties will be ignored."
        },
        {
          "name": "${autofocus:autofocus}=\"$1\"",
          "description": "Specifies that a text area should automatically get focus when the page loads",
          "valueSet": "v"
        },
        {
          "name": "autofocus",
          "description": "Specifies that a text area should automatically get focus when the page loads"
        },
        {
          "name": "${rows:rows}=\"$1\"",
          "description": "The number of rows of a text area",
          "valueSet": "v"
        },
        {
          "name": "rows",
          "description": "The number of rows of a text area"
        },
        {
          "name": "${cols:cols}=\"$1\"",
          "description": "The number of columns of a text area",
          "valueSet": "v"
        },
        {
          "name": "cols",
          "description": "The number of columns of a text area"
        },
        {
          "name": "${disabled:disabled}=\"$1\"",
          "description": "Specifies that the input element should be disabled when the page loads",
          "valueSet": "v"
        },
        {
          "name": "disabled",
          "description": "Specifies that the input element should be disabled when the page loads"
        },
        {
          "name": "${placeholder:placeholder}=\"$1\"",
          "description": "The placeholder of the textarea",
          "valueSet": "v"
        },
        {
          "name": "placeholder",
          "description": "The placeholder of the textarea"
        },
        {
          "name": "${errorClass:errorClass}=\"$1\"",
          "description": "CSS class to set if there are errors for this view helper",
          "valueSet": "v"
        },
        {
          "name": "errorClass",
          "description": "CSS class to set if there are errors for this view helper"
        },
        {
          "name": "${readonly:readonly}=\"$1\"",
          "description": "The readonly attribute of the textarea",
          "valueSet": "v"
        },
        {
          "name": "readonly",
          "description": "The readonly attribute of the textarea"
        },
        {
          "name": "${required:required}=\"$1\"",
          "description": "Specifies whether the textarea is required",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "Specifies whether the textarea is required"
        },
        {
          "name": "${class:class}=\"$1\"",
          "description": "CSS class(es) for this element",
          "valueSet": "v"
        },
        {
          "name": "class",
          "description": "CSS class(es) for this element"
        },
        {
          "name": "${dir:dir}=\"$1\"",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)",
          "valueSet": "v"
        },
        {
          "name": "dir",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)"
        },
        {
          "name": "${id:id}=\"$1\"",
          "description": "Unique (in this file) identifier for this HTML element.",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "Unique (in this file) identifier for this HTML element."
        },
        {
          "name": "${lang:lang}=\"$1\"",
          "description": "Language for this element. Use short names specified in RFC 1766",
          "valueSet": "v"
        },
        {
          "name": "lang",
          "description": "Language for this element. Use short names specified in RFC 1766"
        },
        {
          "name": "${style:style}=\"$1\"",
          "description": "Individual CSS styles for this element",
          "valueSet": "v"
        },
        {
          "name": "style",
          "description": "Individual CSS styles for this element"
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "Tooltip text of element",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "Tooltip text of element"
        },
        {
          "name": "${accesskey:accesskey}=\"$1\"",
          "description": "Keyboard shortcut to access this element",
          "valueSet": "v"
        },
        {
          "name": "accesskey",
          "description": "Keyboard shortcut to access this element"
        },
        {
          "name": "${tabindex:tabindex}=\"$1\"",
          "description": "Specifies the tab order of this element",
          "valueSet": "v"
        },
        {
          "name": "tabindex",
          "description": "Specifies the tab order of this element"
        },
        {
          "name": "${onclick:onclick}=\"$1\"",
          "description": "JavaScript evaluated for the onclick event",
          "valueSet": "v"
        },
        {
          "name": "onclick",
          "description": "JavaScript evaluated for the onclick event"
        }
      ]
    },
    {
      "name": "f:form.textfield",
      "description": "View Helper which creates a text field (<input type=\"text\">). = Examples = <code title=\"Example\"> <f:form.textfield name=\"myTextBox\" value=\"default value\" /> </code> <output> <input type=\"text\" name=\"myTextBox\" value=\"default value\" /> </output> /",
      "attributes": [
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of input tag",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of input tag"
        },
        {
          "name": "${value:value}=\"$1\"",
          "description": "Value of input tag",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "Value of input tag"
        },
        {
          "name": "${property:property}=\"$1\"",
          "description": "Name of Object Property. If used in conjunction with <f:form object=\"...\">, \"name\" and \"value\" properties will be ignored.",
          "valueSet": "v"
        },
        {
          "name": "property",
          "description": "Name of Object Property. If used in conjunction with <f:form object=\"...\">, \"name\" and \"value\" properties will be ignored."
        },
        {
          "name": "${autofocus:autofocus}=\"$1\"",
          "description": "Specifies that an input should automatically get focus when the page loads",
          "valueSet": "v"
        },
        {
          "name": "autofocus",
          "description": "Specifies that an input should automatically get focus when the page loads"
        },
        {
          "name": "${disabled:disabled}=\"$1\"",
          "description": "Specifies that the input element should be disabled when the page loads",
          "valueSet": "v"
        },
        {
          "name": "disabled",
          "description": "Specifies that the input element should be disabled when the page loads"
        },
        {
          "name": "${maxlength:maxlength}=\"$1\"",
          "description": "The maxlength attribute of the input field (will not be validated)",
          "valueSet": "v"
        },
        {
          "name": "maxlength",
          "description": "The maxlength attribute of the input field (will not be validated)"
        },
        {
          "name": "${readonly:readonly}=\"$1\"",
          "description": "The readonly attribute of the input field",
          "valueSet": "v"
        },
        {
          "name": "readonly",
          "description": "The readonly attribute of the input field"
        },
        {
          "name": "${size:size}=\"$1\"",
          "description": "The size of the input field",
          "valueSet": "v"
        },
        {
          "name": "size",
          "description": "The size of the input field"
        },
        {
          "name": "${placeholder:placeholder}=\"$1\"",
          "description": "The placeholder of the textfield",
          "valueSet": "v"
        },
        {
          "name": "placeholder",
          "description": "The placeholder of the textfield"
        },
        {
          "name": "${pattern:pattern}=\"$1\"",
          "description": "HTML5 validation pattern",
          "valueSet": "v"
        },
        {
          "name": "pattern",
          "description": "HTML5 validation pattern"
        },
        {
          "name": "${errorClass:errorClass}=\"$1\"",
          "description": "CSS class to set if there are errors for this view helper",
          "valueSet": "v"
        },
        {
          "name": "errorClass",
          "description": "CSS class to set if there are errors for this view helper"
        },
        {
          "name": "${class:class}=\"$1\"",
          "description": "CSS class(es) for this element",
          "valueSet": "v"
        },
        {
          "name": "class",
          "description": "CSS class(es) for this element"
        },
        {
          "name": "${dir:dir}=\"$1\"",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)",
          "valueSet": "v"
        },
        {
          "name": "dir",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)"
        },
        {
          "name": "${id:id}=\"$1\"",
          "description": "Unique (in this file) identifier for this HTML element.",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "Unique (in this file) identifier for this HTML element."
        },
        {
          "name": "${lang:lang}=\"$1\"",
          "description": "Language for this element. Use short names specified in RFC 1766",
          "valueSet": "v"
        },
        {
          "name": "lang",
          "description": "Language for this element. Use short names specified in RFC 1766"
        },
        {
          "name": "${style:style}=\"$1\"",
          "description": "Individual CSS styles for this element",
          "valueSet": "v"
        },
        {
          "name": "style",
          "description": "Individual CSS styles for this element"
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "Tooltip text of element",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "Tooltip text of element"
        },
        {
          "name": "${accesskey:accesskey}=\"$1\"",
          "description": "Keyboard shortcut to access this element",
          "valueSet": "v"
        },
        {
          "name": "accesskey",
          "description": "Keyboard shortcut to access this element"
        },
        {
          "name": "${tabindex:tabindex}=\"$1\"",
          "description": "Specifies the tab order of this element",
          "valueSet": "v"
        },
        {
          "name": "tabindex",
          "description": "Specifies the tab order of this element"
        },
        {
          "name": "${onclick:onclick}=\"$1\"",
          "description": "JavaScript evaluated for the onclick event",
          "valueSet": "v"
        },
        {
          "name": "onclick",
          "description": "JavaScript evaluated for the onclick event"
        },
        {
          "name": "${required:required}=\"$1\"",
          "description": "If the field is required or not",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "If the field is required or not"
        },
        {
          "name": "${type:type}=\"$1\"",
          "description": "The field type, e.g. \"text\", \"email\", \"url\" etc.",
          "valueSet": "v"
        },
        {
          "name": "type",
          "description": "The field type, e.g. \"text\", \"email\", \"url\" etc."
        }
      ]
    },
    {
      "name": "f:form.upload",
      "description": "A view helper which generates an <input type=\"file\"> HTML element. Make sure to set enctype=\"multipart/form-data\" on the form! = Examples = <code title=\"Example\"> <f:form.upload name=\"file\" /> </code> <output> <input type=\"file\" name=\"file\" /> </output> /",
      "attributes": [
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of input tag",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of input tag"
        },
        {
          "name": "${value:value}=\"$1\"",
          "description": "Value of input tag",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "Value of input tag"
        },
        {
          "name": "${property:property}=\"$1\"",
          "description": "Name of Object Property. If used in conjunction with <f:form object=\"...\">, \"name\" and \"value\" properties will be ignored.",
          "valueSet": "v"
        },
        {
          "name": "property",
          "description": "Name of Object Property. If used in conjunction with <f:form object=\"...\">, \"name\" and \"value\" properties will be ignored."
        },
        {
          "name": "${disabled:disabled}=\"$1\"",
          "description": "Specifies that the input element should be disabled when the page loads",
          "valueSet": "v"
        },
        {
          "name": "disabled",
          "description": "Specifies that the input element should be disabled when the page loads"
        },
        {
          "name": "${multiple:multiple}=\"$1\"",
          "description": "Specifies that the file input element should allow multiple selection of files",
          "valueSet": "v"
        },
        {
          "name": "multiple",
          "description": "Specifies that the file input element should allow multiple selection of files"
        },
        {
          "name": "${errorClass:errorClass}=\"$1\"",
          "description": "CSS class to set if there are errors for this view helper",
          "valueSet": "v"
        },
        {
          "name": "errorClass",
          "description": "CSS class to set if there are errors for this view helper"
        },
        {
          "name": "${class:class}=\"$1\"",
          "description": "CSS class(es) for this element",
          "valueSet": "v"
        },
        {
          "name": "class",
          "description": "CSS class(es) for this element"
        },
        {
          "name": "${dir:dir}=\"$1\"",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)",
          "valueSet": "v"
        },
        {
          "name": "dir",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)"
        },
        {
          "name": "${id:id}=\"$1\"",
          "description": "Unique (in this file) identifier for this HTML element.",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "Unique (in this file) identifier for this HTML element."
        },
        {
          "name": "${lang:lang}=\"$1\"",
          "description": "Language for this element. Use short names specified in RFC 1766",
          "valueSet": "v"
        },
        {
          "name": "lang",
          "description": "Language for this element. Use short names specified in RFC 1766"
        },
        {
          "name": "${style:style}=\"$1\"",
          "description": "Individual CSS styles for this element",
          "valueSet": "v"
        },
        {
          "name": "style",
          "description": "Individual CSS styles for this element"
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "Tooltip text of element",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "Tooltip text of element"
        },
        {
          "name": "${accesskey:accesskey}=\"$1\"",
          "description": "Keyboard shortcut to access this element",
          "valueSet": "v"
        },
        {
          "name": "accesskey",
          "description": "Keyboard shortcut to access this element"
        },
        {
          "name": "${tabindex:tabindex}=\"$1\"",
          "description": "Specifies the tab order of this element",
          "valueSet": "v"
        },
        {
          "name": "tabindex",
          "description": "Specifies the tab order of this element"
        },
        {
          "name": "${onclick:onclick}=\"$1\"",
          "description": "JavaScript evaluated for the onclick event",
          "valueSet": "v"
        },
        {
          "name": "onclick",
          "description": "JavaScript evaluated for the onclick event"
        }
      ]
    },
    {
      "name": "f:form.validationResults",
      "description": "Validation results view helper = Examples = <code title=\"Output error messages as a list\"> <f:form.validationResults> <f:if condition=\"{validationResults.flattenedErrors}\"> <ul class=\"errors\"> <f:for each=\"{validationResults.flattenedErrors}\" as=\"errors\" key=\"propertyPath\"> <li>{propertyPath} <ul> <f:for each=\"{errors}\" as=\"error\"> <li>{error.code}: {error}</li> </f:for> </ul> </li> </f:for> </ul> </f:if> </f:form.validationResults> </code> <output> <ul class=\"errors\"> <li>1234567890: Validation errors for argument \"newBlog\"</li> </ul> </output> <code title=\"Output error messages for a single property\"> <f:form.validationResults for=\"someProperty\"> <f:if condition=\"{validationResults.flattenedErrors}\"> <ul class=\"errors\"> <f:for each=\"{validationResults.errors}\" as=\"error\"> <li>{error.code}: {error}</li> </f:for> </ul> </f:if> </f:form.validationResults> </code> <output> <ul class=\"errors\"> <li>1234567890: Some error message</li> </ul> </output> /",
      "attributes": [
        {
          "name": "${for:for}=\"$1\"",
          "description": "The name of the error name (e.g. argument name or property name). This can also be a property path (like blog.title), and will then only display the validation errors of that property.",
          "valueSet": "v"
        },
        {
          "name": "for",
          "description": "The name of the error name (e.g. argument name or property name). This can also be a property path (like blog.title), and will then only display the validation errors of that property."
        },
        {
          "name": "${as:as}=\"$1\"",
          "description": "The name of the variable to store the current error",
          "valueSet": "v"
        },
        {
          "name": "as",
          "description": "The name of the variable to store the current error"
        }
      ]
    },
    {
      "name": "f:format.bytes",
      "description": "Formats an integer with a byte count into human-readable form. = Examples = <code title=\"Defaults\"> {fileSize -> f:format.bytes()} </code> <output> 123 KB // depending on the value of {fileSize} </output> <code title=\"Defaults\"> {fileSize -> f:format.bytes(decimals: 2, decimalSeparator: '.', thousandsSeparator: ',')} </code> <output> 1,023.00 B // depending on the value of {fileSize} </output> You may provide an own set of units, like this: B,KB,MB,GB,TB,PB,EB,ZB,YB <code title=\"custom units\"> {fileSize -> f:format.bytes(units: '{f:translate(\\'viewhelper.format.bytes.units\\', \\'fluid\\')}' </code> <output> 123 KB // depending on the value of {fileSize} </output> /",
      "attributes": [
        {
          "name": "${value:value}=\"$1\"",
          "description": "The incoming data to convert, or NULL if VH children should be used",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "The incoming data to convert, or NULL if VH children should be used"
        },
        {
          "name": "${decimals:decimals}=\"$1\"",
          "description": "The number of digits after the decimal point",
          "valueSet": "v"
        },
        {
          "name": "decimals",
          "description": "The number of digits after the decimal point"
        },
        {
          "name": "${decimalSeparator:decimalSeparator}=\"$1\"",
          "description": "The decimal point character",
          "valueSet": "v"
        },
        {
          "name": "decimalSeparator",
          "description": "The decimal point character"
        },
        {
          "name": "${thousandsSeparator:thousandsSeparator}=\"$1\"",
          "description": "The character for grouping the thousand digits",
          "valueSet": "v"
        },
        {
          "name": "thousandsSeparator",
          "description": "The character for grouping the thousand digits"
        },
        {
          "name": "${units:units}=\"$1\"",
          "description": "comma separated list of available units, default is LocalizationUtility::translate('viewhelper.format.bytes.units', 'fluid')",
          "valueSet": "v"
        },
        {
          "name": "units",
          "description": "comma separated list of available units, default is LocalizationUtility::translate('viewhelper.format.bytes.units', 'fluid')"
        }
      ]
    },
    {
      "name": "f:format.case",
      "description": "Modifies the case of an input string to upper- or lowercase or capitalization. The default transformation will be uppercase as in ``mb_convert_case`` [1]. Possible modes are: ``lower`` Transforms the input string to its lowercase representation ``upper`` Transforms the input string to its uppercase representation ``capital`` Transforms the input string to its first letter upper-cased, i.e. capitalization ``uncapital`` Transforms the input string to its first letter lower-cased, i.e. uncapitalization ``capitalWords`` Not supported yet: Transforms the input string to each containing word being capitalized Note that the behavior will be the same as in the appropriate PHP function ``mb_convert_case`` [1]; especially regarding locale and multibyte behavior. = Examples = <code title=\"Example\"> <f:format.case>Some Text with miXed case</f:format.case> </code> <output> SOME TEXT WITH MIXED CASE </output> <code title=\"Example with given mode\"> <f:format.case mode=\"capital\">someString</f:format.case> </code> <output> SomeString </output> /",
      "attributes": [
        {
          "name": "${value:value}=\"$1\"",
          "description": "The input value. If not given, the evaluated child nodes will be used.",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "The input value. If not given, the evaluated child nodes will be used."
        },
        {
          "name": "${mode:mode}=\"$1\"",
          "description": "The case to apply, must be one of this' CASE_* constants. Defaults to uppercase application.",
          "valueSet": "v"
        },
        {
          "name": "mode",
          "description": "The case to apply, must be one of this' CASE_* constants. Defaults to uppercase application."
        }
      ]
    },
    {
      "name": "f:format.crop",
      "description": "Use this view helper to crop the text between its opening and closing tags. = Examples = <code title=\"Defaults\"> <f:format.crop maxCharacters=\"10\">This is some very long text</f:format.crop> </code> <output> This is </output> <code title=\"Custom suffix\"> <f:format.crop maxCharacters=\"17\" append=\"&nbsp;[more]\">This is some very long text</f:format.crop> </code> <output> This is some&nbsp;[more] </output> <code title=\"Don't respect word boundaries\"> <f:format.crop maxCharacters=\"10\" respectWordBoundaries=\"false\">This is some very long text</f:format.crop> </code> <output> This is so </output> <code title=\"Don't respect HTML tags\"> <f:format.crop maxCharacters=\"28\" respectWordBoundaries=\"false\" respectHtml=\"false\">This is some text with <strong>HTML</strong> tags</f:format.crop> </code> <output> This is some text with <stro </output> <code title=\"Inline notation\"> {someLongText -> f:format.crop(maxCharacters: 10)} </code> <output> someLongText cropped after 10 characters (depending on the value of {someLongText}) </output> /",
      "attributes": [
        {
          "name": "${maxCharacters:maxCharacters}=\"$1\"",
          "description": "Place where to truncate the string",
          "valueSet": "v"
        },
        {
          "name": "maxCharacters",
          "description": "Place where to truncate the string"
        },
        {
          "name": "${append:append}=\"$1\"",
          "description": "What to append, if truncation happened",
          "valueSet": "v"
        },
        {
          "name": "append",
          "description": "What to append, if truncation happened"
        },
        {
          "name": "${respectWordBoundaries:respectWordBoundaries}=\"$1\"",
          "description": "If TRUE and division is in the middle of a word, the remains of that word is removed.",
          "valueSet": "v"
        },
        {
          "name": "respectWordBoundaries",
          "description": "If TRUE and division is in the middle of a word, the remains of that word is removed."
        },
        {
          "name": "${respectHtml:respectHtml}=\"$1\"",
          "description": "If TRUE the cropped string will respect HTML tags and entities. Technically that means, that cropHTML() is called rather than crop()",
          "valueSet": "v"
        },
        {
          "name": "respectHtml",
          "description": "If TRUE the cropped string will respect HTML tags and entities. Technically that means, that cropHTML() is called rather than crop()"
        }
      ]
    },
    {
      "name": "f:format.currency",
      "description": "Formats a given float to a currency representation. = Examples = <code title=\"Defaults\"> <f:format.currency>123.456</f:format.currency> </code> <output> 123,46 </output> <code title=\"All parameters\"> <f:format.currency currencySign=\"$\" decimalSeparator=\".\" thousandsSeparator=\",\" prependCurrency=\"true\" separateCurrency=\"false\" decimals=\"2\">54321</f:format.currency> </code> <output> $54,321.00 </output> <code title=\"Inline notation\"> {someNumber -> f:format.currency(thousandsSeparator: ',', currencySign: '')} </code> <output> 54,321,00 (depending on the value of {someNumber}) </output> /",
      "attributes": [
        {
          "name": "${currencySign:currencySign}=\"$1\"",
          "description": "The currency sign, eg $ or .",
          "valueSet": "v"
        },
        {
          "name": "currencySign",
          "description": "The currency sign, eg $ or ."
        },
        {
          "name": "${decimalSeparator:decimalSeparator}=\"$1\"",
          "description": "The separator for the decimal point.",
          "valueSet": "v"
        },
        {
          "name": "decimalSeparator",
          "description": "The separator for the decimal point."
        },
        {
          "name": "${thousandsSeparator:thousandsSeparator}=\"$1\"",
          "description": "The thousands separator.",
          "valueSet": "v"
        },
        {
          "name": "thousandsSeparator",
          "description": "The thousands separator."
        },
        {
          "name": "${prependCurrency:prependCurrency}=\"$1\"",
          "description": "Select if the currency sign should be prepended",
          "valueSet": "v"
        },
        {
          "name": "prependCurrency",
          "description": "Select if the currency sign should be prepended"
        },
        {
          "name": "${separateCurrency:separateCurrency}=\"$1\"",
          "description": "Separate the currency sign from the number by a single space, defaults to true due to backwards compatibility",
          "valueSet": "v"
        },
        {
          "name": "separateCurrency",
          "description": "Separate the currency sign from the number by a single space, defaults to true due to backwards compatibility"
        },
        {
          "name": "${decimals:decimals}=\"$1\"",
          "description": "Set decimals places.",
          "valueSet": "v"
        },
        {
          "name": "decimals",
          "description": "Set decimals places."
        }
      ]
    },
    {
      "name": "f:format.date",
      "description": "Formats an object implementing \\DateTimeInterface. = Examples = <code title=\"Defaults\"> <f:format.date>{dateObject}</f:format.date> </code> <output> 1980-12-13 (depending on the current date) </output> <code title=\"Custom date format\"> <f:format.date format=\"H:i\">{dateObject}</f:format.date> </code> <output> 01:23 (depending on the current time) </output> <code title=\"Relative date with given time\"> <f:format.date format=\"Y\" base=\"{dateObject}\">-1 year</f:format.date> </code> <output> 2016 (assuming dateObject is in 2017) </output> <code title=\"strtotime string\"> <f:format.date format=\"d.m.Y - H:i:s\">+1 week 2 days 4 hours 2 seconds</f:format.date> </code> <output> 13.12.1980 - 21:03:42 (depending on the current time, see http://www.php.net/manual/en/function.strtotime.php) </output> <code title=\"Localized dates using strftime date format\"> <f:format.date format=\"%d. %B %Y\">{dateObject}</f:format.date> </code> <output> 13. Dezember 1980 (depending on the current date and defined locale. In the example you see the 1980-12-13 in a german locale) </output> <code title=\"Inline notation\"> {f:format.date(date: dateObject)} </code> <output> 1980-12-13 (depending on the value of {dateObject}) </output> <code title=\"Inline notation (2nd variant)\"> {dateObject -> f:format.date()} </code> <output> 1980-12-13 (depending on the value of {dateObject}) </output> /",
      "attributes": [
        {
          "name": "${date:date}=\"$1\"",
          "description": "Either an object implementing DateTimeInterface or a string that is accepted by DateTime constructor",
          "valueSet": "v"
        },
        {
          "name": "date",
          "description": "Either an object implementing DateTimeInterface or a string that is accepted by DateTime constructor"
        },
        {
          "name": "${format:format}=\"$1\"",
          "description": "Format String which is taken to format the Date/Time",
          "valueSet": "v"
        },
        {
          "name": "format",
          "description": "Format String which is taken to format the Date/Time"
        },
        {
          "name": "${base:base}=\"$1\"",
          "description": "A base time (an object implementing DateTimeInterface or a string) used if $date is a relative date specification. Defaults to current time.",
          "valueSet": "v"
        },
        {
          "name": "base",
          "description": "A base time (an object implementing DateTimeInterface or a string) used if $date is a relative date specification. Defaults to current time."
        }
      ]
    },
    {
      "name": "f:format.html",
      "description": "Renders a string by passing it to a TYPO3 parseFunc. You can either specify a path to the TypoScript setting or set the parseFunc options directly. By default lib.parseFunc_RTE is used to parse the string. == Examples == <code title=\"Default parameters\"> <f:format.html>foo <b>bar</b>. Some <LINK 1>link</LINK>.</f:format.html> </code> <output> <p class=\"bodytext\">foo <b>bar</b>. Some <a href=\"index.php?id=1\" >link</a>.</p> (depending on your TYPO3 setup) </output> <code title=\"Custom parseFunc\"> <f:format.html parseFuncTSPath=\"lib.parseFunc\">foo <b>bar</b>. Some <LINK 1>link</LINK>.</f:format.html> </code> <output> foo <b>bar</b>. Some <a href=\"index.php?id=1\" >link</a>. </output> <code title=\"Inline notation\"> {someText -> f:format.html(parseFuncTSPath: 'lib.parseFunc')} </code> <output> foo <b>bar</b>. Some <a href=\"index.php?id=1\" >link</a>. </output> /",
      "attributes": [
        {
          "name": "${parseFuncTSPath:parseFuncTSPath}=\"$1\"",
          "description": "path to TypoScript parseFunc setup.",
          "valueSet": "v"
        },
        {
          "name": "parseFuncTSPath",
          "description": "path to TypoScript parseFunc setup."
        }
      ]
    },
    {
      "name": "f:format.htmlentitiesDecode",
      "description": "Applies html_entity_decode() to a value = Examples = <code title=\"default notation\"> <f:format.htmlentitiesDecode>{text}</f:format.htmlentitiesDecode> </code> <output> Text with &amp; &quot; &lt; &gt; replaced by unescaped entities (html_entity_decode applied). </output> <code title=\"inline notation\"> {text -> f:format.htmlentitiesDecode(encoding: 'ISO-8859-1')} </code> <output> Text with &amp; &quot; &lt; &gt; replaced by unescaped entities (html_entity_decode applied). </output> /",
      "attributes": [
        {
          "name": "${value:value}=\"$1\"",
          "description": "string to format",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "string to format"
        },
        {
          "name": "${keepQuotes:keepQuotes}=\"$1\"",
          "description": "If TRUE, single and double quotes won't be replaced (sets ENT_NOQUOTES flag).",
          "valueSet": "v"
        },
        {
          "name": "keepQuotes",
          "description": "If TRUE, single and double quotes won't be replaced (sets ENT_NOQUOTES flag)."
        },
        {
          "name": "${encoding:encoding}=\"$1\"",
          "description": "",
          "valueSet": "v"
        },
        {
          "name": "encoding",
          "description": ""
        }
      ]
    },
    {
      "name": "f:format.htmlentities",
      "description": "Applies htmlentities() escaping to a value = Examples = <code title=\"default notation\"> <f:format.htmlentities>{text}</f:format.htmlentities> </code> <output> Text with & \" ' < > * replaced by HTML entities (htmlentities applied). </output> <code title=\"inline notation\"> {text -> f:format.htmlentities(encoding: 'ISO-8859-1')} </code> <output> Text with & \" ' < > * replaced by HTML entities (htmlentities applied). </output> /",
      "attributes": [
        {
          "name": "${value:value}=\"$1\"",
          "description": "string to format",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "string to format"
        },
        {
          "name": "${keepQuotes:keepQuotes}=\"$1\"",
          "description": "If TRUE, single and double quotes won't be replaced (sets ENT_NOQUOTES flag).",
          "valueSet": "v"
        },
        {
          "name": "keepQuotes",
          "description": "If TRUE, single and double quotes won't be replaced (sets ENT_NOQUOTES flag)."
        },
        {
          "name": "${encoding:encoding}=\"$1\"",
          "description": "",
          "valueSet": "v"
        },
        {
          "name": "encoding",
          "description": ""
        },
        {
          "name": "${doubleEncode:doubleEncode}=\"$1\"",
          "description": "If FALSE existing html entities won't be encoded, the default is to convert everything.",
          "valueSet": "v"
        },
        {
          "name": "doubleEncode",
          "description": "If FALSE existing html entities won't be encoded, the default is to convert everything."
        }
      ]
    },
    {
      "name": "f:format.json",
      "description": "Wrapper for PHPs json_encode function. = Examples = <code title=\"encoding a view variable\"> {someArray -> f:format.json()} </code> <output> [\"array\",\"values\"] // depending on the value of {someArray} </output> <code title=\"associative array\"> {f:format.json(value: {foo: 'bar', bar: 'baz'})} </code> <output> {\"foo\":\"bar\",\"bar\":\"baz\"} </output> <code title=\"non-associative array with forced object\"> {f:format.json(value: {0: 'bar', 1: 'baz'}, forceObject: true)} </code> <output> {\"0\":\"bar\",\"1\":\"baz\"} </output> /",
      "attributes": [
        {
          "name": "${value:value}=\"$1\"",
          "description": "The incoming data to convert, or null if VH children should be used",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "The incoming data to convert, or null if VH children should be used"
        },
        {
          "name": "${forceObject:forceObject}=\"$1\"",
          "description": "Outputs an JSON object rather than an array",
          "valueSet": "v"
        },
        {
          "name": "forceObject",
          "description": "Outputs an JSON object rather than an array"
        }
      ]
    },
    {
      "name": "f:format.nl2br",
      "description": "Wrapper for PHPs nl2br function. = Examples = <code title=\"Example\"> <f:format.nl2br>{text_with_linebreaks}</f:format.nl2br> </code> <output> text with line breaks replaced by <br /> </output> <code title=\"Inline notation\"> {text_with_linebreaks -> f:format.nl2br()} </code> <output> text with line breaks replaced by <br /> </output> /",
      "attributes": [
        {
          "name": "${value:value}=\"$1\"",
          "description": "string to format",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "string to format"
        }
      ]
    },
    {
      "name": "f:format.number",
      "description": "Formats a number with custom precision, decimal point and grouped thousands. = Examples = <code title=\"Defaults\"> <f:format.number>423423.234</f:format.number> </code> <output> 423,423.20 </output> <code title=\"With all parameters\"> <f:format.number decimals=\"1\" decimalSeparator=\",\" thousandsSeparator=\".\">423423.234</f:format.number> </code> <output> 423.423,2 </output> /",
      "attributes": [
        {
          "name": "${decimals:decimals}=\"$1\"",
          "description": "The number of digits after the decimal point",
          "valueSet": "v"
        },
        {
          "name": "decimals",
          "description": "The number of digits after the decimal point"
        },
        {
          "name": "${decimalSeparator:decimalSeparator}=\"$1\"",
          "description": "The decimal point character",
          "valueSet": "v"
        },
        {
          "name": "decimalSeparator",
          "description": "The decimal point character"
        },
        {
          "name": "${thousandsSeparator:thousandsSeparator}=\"$1\"",
          "description": "The character for grouping the thousand digits",
          "valueSet": "v"
        },
        {
          "name": "thousandsSeparator",
          "description": "The character for grouping the thousand digits"
        }
      ]
    },
    {
      "name": "f:format.padding",
      "description": "Formats a string using PHPs str_pad function. = Examples = <code title=\"Defaults\"> <f:format.padding padLength=\"10\">TYPO3</f:format.padding> </code> <output> TYPO3 (note the trailing whitespace) <output> <code title=\"Specify padding string\"> <f:format.padding padLength=\"10\" padString=\"-=\">TYPO3</f:format.padding> </code> <output> TYPO3-=-=- </output> <code title=\"Specify padding type\"> <f:format.padding padLength=\"10\" padString=\"-\" padType=\"both\">TYPO3</f:format.padding> </code> <output> --TYPO3--- </output> /",
      "attributes": [
        {
          "name": "${value:value}=\"$1\"",
          "description": "string to format",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "string to format"
        },
        {
          "name": "${padLength:padLength}=\"$1\"",
          "description": "Length of the resulting string. If the value of pad_length is negative or less than the length of the input string, no padding takes place.",
          "valueSet": "v"
        },
        {
          "name": "padLength",
          "description": "Length of the resulting string. If the value of pad_length is negative or less than the length of the input string, no padding takes place."
        },
        {
          "name": "${padString:padString}=\"$1\"",
          "description": "The padding string",
          "valueSet": "v"
        },
        {
          "name": "padString",
          "description": "The padding string"
        },
        {
          "name": "${padType:padType}=\"$1\"",
          "description": "Append the padding at this site (Possible values: right,left,both. Default: right)",
          "valueSet": "v"
        },
        {
          "name": "padType",
          "description": "Append the padding at this site (Possible values: right,left,both. Default: right)"
        }
      ]
    },
    {
      "name": "f:format.stripTags",
      "description": "Removes tags from the given string (applying PHPs strip_tags() function) = Examples = <code title=\"default notation\"> <f:format.stripTags>Some Text with <b>Tags</b> and an &Uuml;mlaut.</f:format.stripTags> </code> <output> Some Text with Tags and an &Uuml;mlaut. (strip_tags() applied. Note: encoded entities are not decoded) </output> <code title=\"default notation with allowedTags\"> <f:format.stripTags allowedTags=\"<p><span><div><script>\"><p>paragraph</p><span>span</span><div>divider</div><iframe>iframe</iframe><script>script</script></f:format.stripTags> </code> <output> <p>paragraph</p><span>span</span><div>divider</div>iframe<script>script</script> </output> <code title=\"inline notation\"> {text -> f:format.stripTags()} </code> <output> Text without tags (strip_tags() applied) </output> <code title=\"inline notation with allowedTags\"> {text -> f:format.stripTags(allowedTags: \"<p><span><div><script>\")} </code> <output> Text with p, span, div and script Tags inside, all other tags are removed </output> /",
      "attributes": [
        {
          "name": "${value:value}=\"$1\"",
          "description": "string to format",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "string to format"
        },
        {
          "name": "${allowedTags:allowedTags}=\"$1\"",
          "description": "Optional string of allowed tags as required by PHPs strip_tags() function",
          "valueSet": "v"
        },
        {
          "name": "allowedTags",
          "description": "Optional string of allowed tags as required by PHPs strip_tags() function"
        }
      ]
    },
    {
      "name": "f:format.urlencode",
      "description": "Encodes the given string according to http://www.faqs.org/rfcs/rfc3986.html (applying PHPs rawurlencode() function) Note: The output is not escaped. You may have to ensure proper escaping on your own. = Examples = <code title=\"default notation\"> </code> <output> foo%20%40%2B%25%2F (rawurlencode() applied) </output> <code title=\"inline notation\"> {text -> f:format.urlencode()} </code> <output> Url encoded text (rawurlencode() applied) </output> /",
      "attributes": [
        {
          "name": "${value:value}=\"$1\"",
          "description": "string to format",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "string to format"
        }
      ]
    },
    {
      "name": "f:image",
      "description": "Resizes a given image (if required) and renders the respective img tag = Examples = <code title=\"Default\"> <f:image src=\"EXT:myext/Resources/Public/typo3_logo.png\" alt=\"alt text\" /> </code> <output> <img alt=\"alt text\" src=\"typo3conf/ext/myext/Resources/Public/typo3_logo.png\" width=\"396\" height=\"375\" /> or (in BE mode): <img alt=\"alt text\" src=\"../typo3conf/ext/viewhelpertest/Resources/Public/typo3_logo.png\" width=\"396\" height=\"375\" /> </output> <code title=\"Image Object\"> <f:image image=\"{imageObject}\" /> </code> <output> <img alt=\"alt set in image record\" src=\"fileadmin/_processed_/323223424.png\" width=\"396\" height=\"375\" /> </output> <code title=\"Inline notation\"> {f:image(src: 'EXT:viewhelpertest/Resources/Public/typo3_logo.png', alt: 'alt text', minWidth: 30, maxWidth: 40)} </code> <output> <img alt=\"alt text\" src=\"../typo3temp/assets/images/f13d79a526.png\" width=\"40\" height=\"38\" /> (depending on your TYPO3s encryption key) </output> <code title=\"Other resource type (e.g. PDF)\"> <f:image src=\"fileadmin/user_upload/example.pdf\" alt=\"foo\" /> </code> <output> If your graphics processing library is set up correctly then it will output a thumbnail of the first page of your PDF document. <img src=\"fileadmin/_processed_/1/2/csm_example_aabbcc112233.gif\" width=\"200\" height=\"284\" alt=\"foo\"> </output> <code title=\"Non-existent image\"> <f:image src=\"NonExistingImage.png\" alt=\"foo\" /> </code> <output> Could not get image resource for \"NonExistingImage.png\". </output> /",
      "attributes": [
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${class:class}=\"$1\"",
          "description": "CSS class(es) for this element",
          "valueSet": "v"
        },
        {
          "name": "class",
          "description": "CSS class(es) for this element"
        },
        {
          "name": "${dir:dir}=\"$1\"",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)",
          "valueSet": "v"
        },
        {
          "name": "dir",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)"
        },
        {
          "name": "${id:id}=\"$1\"",
          "description": "Unique (in this file) identifier for this HTML element.",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "Unique (in this file) identifier for this HTML element."
        },
        {
          "name": "${lang:lang}=\"$1\"",
          "description": "Language for this element. Use short names specified in RFC 1766",
          "valueSet": "v"
        },
        {
          "name": "lang",
          "description": "Language for this element. Use short names specified in RFC 1766"
        },
        {
          "name": "${style:style}=\"$1\"",
          "description": "Individual CSS styles for this element",
          "valueSet": "v"
        },
        {
          "name": "style",
          "description": "Individual CSS styles for this element"
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "Tooltip text of element",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "Tooltip text of element"
        },
        {
          "name": "${accesskey:accesskey}=\"$1\"",
          "description": "Keyboard shortcut to access this element",
          "valueSet": "v"
        },
        {
          "name": "accesskey",
          "description": "Keyboard shortcut to access this element"
        },
        {
          "name": "${tabindex:tabindex}=\"$1\"",
          "description": "Specifies the tab order of this element",
          "valueSet": "v"
        },
        {
          "name": "tabindex",
          "description": "Specifies the tab order of this element"
        },
        {
          "name": "${onclick:onclick}=\"$1\"",
          "description": "JavaScript evaluated for the onclick event",
          "valueSet": "v"
        },
        {
          "name": "onclick",
          "description": "JavaScript evaluated for the onclick event"
        },
        {
          "name": "${alt:alt}=\"$1\"",
          "description": "Specifies an alternate text for an image",
          "valueSet": "v"
        },
        {
          "name": "alt",
          "description": "Specifies an alternate text for an image"
        },
        {
          "name": "${ismap:ismap}=\"$1\"",
          "description": "Specifies an image as a server-side image-map. Rarely used. Look at usemap instead",
          "valueSet": "v"
        },
        {
          "name": "ismap",
          "description": "Specifies an image as a server-side image-map. Rarely used. Look at usemap instead"
        },
        {
          "name": "${longdesc:longdesc}=\"$1\"",
          "description": "Specifies the URL to a document that contains a long description of an image",
          "valueSet": "v"
        },
        {
          "name": "longdesc",
          "description": "Specifies the URL to a document that contains a long description of an image"
        },
        {
          "name": "${usemap:usemap}=\"$1\"",
          "description": "Specifies an image as a client-side image-map",
          "valueSet": "v"
        },
        {
          "name": "usemap",
          "description": "Specifies an image as a client-side image-map"
        },
        {
          "name": "${src:src}=\"$1\"",
          "description": "a path to a file, a combined FAL identifier or an uid (int). If $treatIdAsReference is set, the integer is considered the uid of the sys_file_reference record. If you already got a FAL object, consider using the $image parameter instead",
          "valueSet": "v"
        },
        {
          "name": "src",
          "description": "a path to a file, a combined FAL identifier or an uid (int). If $treatIdAsReference is set, the integer is considered the uid of the sys_file_reference record. If you already got a FAL object, consider using the $image parameter instead"
        },
        {
          "name": "${treatIdAsReference:treatIdAsReference}=\"$1\"",
          "description": "given src argument is a sys_file_reference record",
          "valueSet": "v"
        },
        {
          "name": "treatIdAsReference",
          "description": "given src argument is a sys_file_reference record"
        },
        {
          "name": "${image:image}=\"$1\"",
          "description": "a FAL object",
          "valueSet": "v"
        },
        {
          "name": "image",
          "description": "a FAL object"
        },
        {
          "name": "${crop:crop}=\"$1\"",
          "description": "overrule cropping of image (setting to FALSE disables the cropping set in FileReference)",
          "valueSet": "v"
        },
        {
          "name": "crop",
          "description": "overrule cropping of image (setting to FALSE disables the cropping set in FileReference)"
        },
        {
          "name": "${cropVariant:cropVariant}=\"$1\"",
          "description": "select a cropping variant, in case multiple croppings have been specified or stored in FileReference",
          "valueSet": "v"
        },
        {
          "name": "cropVariant",
          "description": "select a cropping variant, in case multiple croppings have been specified or stored in FileReference"
        },
        {
          "name": "${width:width}=\"$1\"",
          "description": "width of the image. This can be a numeric value representing the fixed width of the image in pixels. But you can also perform simple calculations by adding \"m\" or \"c\" to the value. See imgResource.width for possible options.",
          "valueSet": "v"
        },
        {
          "name": "width",
          "description": "width of the image. This can be a numeric value representing the fixed width of the image in pixels. But you can also perform simple calculations by adding \"m\" or \"c\" to the value. See imgResource.width for possible options."
        },
        {
          "name": "${height:height}=\"$1\"",
          "description": "height of the image. This can be a numeric value representing the fixed height of the image in pixels. But you can also perform simple calculations by adding \"m\" or \"c\" to the value. See imgResource.width for possible options.",
          "valueSet": "v"
        },
        {
          "name": "height",
          "description": "height of the image. This can be a numeric value representing the fixed height of the image in pixels. But you can also perform simple calculations by adding \"m\" or \"c\" to the value. See imgResource.width for possible options."
        },
        {
          "name": "${minWidth:minWidth}=\"$1\"",
          "description": "minimum width of the image",
          "valueSet": "v"
        },
        {
          "name": "minWidth",
          "description": "minimum width of the image"
        },
        {
          "name": "${minHeight:minHeight}=\"$1\"",
          "description": "minimum width of the image",
          "valueSet": "v"
        },
        {
          "name": "minHeight",
          "description": "minimum width of the image"
        },
        {
          "name": "${maxWidth:maxWidth}=\"$1\"",
          "description": "minimum width of the image",
          "valueSet": "v"
        },
        {
          "name": "maxWidth",
          "description": "minimum width of the image"
        },
        {
          "name": "${maxHeight:maxHeight}=\"$1\"",
          "description": "minimum width of the image",
          "valueSet": "v"
        },
        {
          "name": "maxHeight",
          "description": "minimum width of the image"
        },
        {
          "name": "${absolute:absolute}=\"$1\"",
          "description": "Force absolute URL",
          "valueSet": "v"
        },
        {
          "name": "absolute",
          "description": "Force absolute URL"
        }
      ]
    },
    {
      "name": "f:link.action",
      "description": "A view helper for creating links to extbase actions. = Examples = <code title=\"link to the show-action of the current controller\"> <f:link.action action=\"show\">action link</f:link.action> </code> <output> <a href=\"index.php?id=123&tx_myextension_plugin[action]=show&tx_myextension_plugin[controller]=Standard&cHash=xyz\">action link</f:link.action> (depending on the current page and your TS configuration) </output> /",
      "attributes": [
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${class:class}=\"$1\"",
          "description": "CSS class(es) for this element",
          "valueSet": "v"
        },
        {
          "name": "class",
          "description": "CSS class(es) for this element"
        },
        {
          "name": "${dir:dir}=\"$1\"",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)",
          "valueSet": "v"
        },
        {
          "name": "dir",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)"
        },
        {
          "name": "${id:id}=\"$1\"",
          "description": "Unique (in this file) identifier for this HTML element.",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "Unique (in this file) identifier for this HTML element."
        },
        {
          "name": "${lang:lang}=\"$1\"",
          "description": "Language for this element. Use short names specified in RFC 1766",
          "valueSet": "v"
        },
        {
          "name": "lang",
          "description": "Language for this element. Use short names specified in RFC 1766"
        },
        {
          "name": "${style:style}=\"$1\"",
          "description": "Individual CSS styles for this element",
          "valueSet": "v"
        },
        {
          "name": "style",
          "description": "Individual CSS styles for this element"
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "Tooltip text of element",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "Tooltip text of element"
        },
        {
          "name": "${accesskey:accesskey}=\"$1\"",
          "description": "Keyboard shortcut to access this element",
          "valueSet": "v"
        },
        {
          "name": "accesskey",
          "description": "Keyboard shortcut to access this element"
        },
        {
          "name": "${tabindex:tabindex}=\"$1\"",
          "description": "Specifies the tab order of this element",
          "valueSet": "v"
        },
        {
          "name": "tabindex",
          "description": "Specifies the tab order of this element"
        },
        {
          "name": "${onclick:onclick}=\"$1\"",
          "description": "JavaScript evaluated for the onclick event",
          "valueSet": "v"
        },
        {
          "name": "onclick",
          "description": "JavaScript evaluated for the onclick event"
        },
        {
          "name": "${name:name}=\"$1\"",
          "description": "Specifies the name of an anchor",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Specifies the name of an anchor"
        },
        {
          "name": "${rel:rel}=\"$1\"",
          "description": "Specifies the relationship between the current document and the linked document",
          "valueSet": "v"
        },
        {
          "name": "rel",
          "description": "Specifies the relationship between the current document and the linked document"
        },
        {
          "name": "${rev:rev}=\"$1\"",
          "description": "Specifies the relationship between the linked document and the current document",
          "valueSet": "v"
        },
        {
          "name": "rev",
          "description": "Specifies the relationship between the linked document and the current document"
        },
        {
          "name": "${target:target}=\"$1\"",
          "description": "Specifies where to open the linked document",
          "valueSet": "v"
        },
        {
          "name": "target",
          "description": "Specifies where to open the linked document"
        },
        {
          "name": "${action:action}=\"$1\"",
          "description": "Target action",
          "valueSet": "v"
        },
        {
          "name": "action",
          "description": "Target action"
        },
        {
          "name": "${controller:controller}=\"$1\"",
          "description": "Target controller. If NULL current controllerName is used",
          "valueSet": "v"
        },
        {
          "name": "controller",
          "description": "Target controller. If NULL current controllerName is used"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "Target Extension Name (without \"tx_\" prefix and no underscores). If NULL the current extension name is used",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "Target Extension Name (without \"tx_\" prefix and no underscores). If NULL the current extension name is used"
        },
        {
          "name": "${pluginName:pluginName}=\"$1\"",
          "description": "Target plugin. If empty, the current plugin name is used",
          "valueSet": "v"
        },
        {
          "name": "pluginName",
          "description": "Target plugin. If empty, the current plugin name is used"
        },
        {
          "name": "${pageUid:pageUid}=\"$1\"",
          "description": "Target page. See TypoLink destination",
          "valueSet": "v"
        },
        {
          "name": "pageUid",
          "description": "Target page. See TypoLink destination"
        },
        {
          "name": "${pageType:pageType}=\"$1\"",
          "description": "Type of the target page. See typolink.parameter",
          "valueSet": "v"
        },
        {
          "name": "pageType",
          "description": "Type of the target page. See typolink.parameter"
        },
        {
          "name": "${noCache:noCache}=\"$1\"",
          "description": "Set this to disable caching for the target page. You should not need this.",
          "valueSet": "v"
        },
        {
          "name": "noCache",
          "description": "Set this to disable caching for the target page. You should not need this."
        },
        {
          "name": "${noCacheHash:noCacheHash}=\"$1\"",
          "description": "Set this to suppress the cHash query parameter created by TypoLink. You should not need this.",
          "valueSet": "v"
        },
        {
          "name": "noCacheHash",
          "description": "Set this to suppress the cHash query parameter created by TypoLink. You should not need this."
        },
        {
          "name": "${section:section}=\"$1\"",
          "description": "The anchor to be added to the URI",
          "valueSet": "v"
        },
        {
          "name": "section",
          "description": "The anchor to be added to the URI"
        },
        {
          "name": "${format:format}=\"$1\"",
          "description": "The requested format, e.g. \".html",
          "valueSet": "v"
        },
        {
          "name": "format",
          "description": "The requested format, e.g. \".html"
        },
        {
          "name": "${linkAccessRestrictedPages:linkAccessRestrictedPages}=\"$1\"",
          "description": "If set, links pointing to access restricted pages will still link to the page even though the page cannot be accessed.",
          "valueSet": "v"
        },
        {
          "name": "linkAccessRestrictedPages",
          "description": "If set, links pointing to access restricted pages will still link to the page even though the page cannot be accessed."
        },
        {
          "name": "${additionalParams:additionalParams}=\"$1\"",
          "description": "Additional query parameters that won't be prefixed like $arguments (overrule $arguments)",
          "valueSet": "v"
        },
        {
          "name": "additionalParams",
          "description": "Additional query parameters that won't be prefixed like $arguments (overrule $arguments)"
        },
        {
          "name": "${absolute:absolute}=\"$1\"",
          "description": "If set, the URI of the rendered link is absolute",
          "valueSet": "v"
        },
        {
          "name": "absolute",
          "description": "If set, the URI of the rendered link is absolute"
        },
        {
          "name": "${addQueryString:addQueryString}=\"$1\"",
          "description": "If set, the current query parameters will be kept in the URI",
          "valueSet": "v"
        },
        {
          "name": "addQueryString",
          "description": "If set, the current query parameters will be kept in the URI"
        },
        {
          "name": "${argumentsToBeExcludedFromQueryString:argumentsToBeExcludedFromQueryString}=\"$1\"",
          "description": "Arguments to be removed from the URI. Only active if $addQueryString = TRUE",
          "valueSet": "v"
        },
        {
          "name": "argumentsToBeExcludedFromQueryString",
          "description": "Arguments to be removed from the URI. Only active if $addQueryString = TRUE"
        },
        {
          "name": "${addQueryStringMethod:addQueryStringMethod}=\"$1\"",
          "description": "Set which parameters will be kept. Only active if $addQueryString = TRUE",
          "valueSet": "v"
        },
        {
          "name": "addQueryStringMethod",
          "description": "Set which parameters will be kept. Only active if $addQueryString = TRUE"
        },
        {
          "name": "${arguments:arguments}=\"$1\"",
          "description": "Arguments for the controller action, associative array",
          "valueSet": "v"
        },
        {
          "name": "arguments",
          "description": "Arguments for the controller action, associative array"
        }
      ]
    },
    {
      "name": "f:link.email",
      "description": "Email link view helper. Generates an email link incorporating TYPO3s spamProtectEmailAddresses-settings. = Examples <code title=\"basic email link\"> </code> <output> <a href=\"javascript:linkTo_UnCryptMailto('ocknvq,hqqBdct0vnf');\">foo(at)bar.tld</a> (depending on your spamProtectEmailAddresses-settings) </output> <code title=\"Email link with custom linktext\"> </code> <output> <a href=\"javascript:linkTo_UnCryptMailto('ocknvq,hqqBdct0vnf');\">some custom content</a> </output> /",
      "attributes": [
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${email:email}=\"$1\"",
          "description": "The email address to be turned into a link",
          "valueSet": "v"
        },
        {
          "name": "email",
          "description": "The email address to be turned into a link"
        },
        {
          "name": "${class:class}=\"$1\"",
          "description": "CSS class(es) for this element",
          "valueSet": "v"
        },
        {
          "name": "class",
          "description": "CSS class(es) for this element"
        },
        {
          "name": "${dir:dir}=\"$1\"",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)",
          "valueSet": "v"
        },
        {
          "name": "dir",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)"
        },
        {
          "name": "${id:id}=\"$1\"",
          "description": "Unique (in this file) identifier for this HTML element.",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "Unique (in this file) identifier for this HTML element."
        },
        {
          "name": "${lang:lang}=\"$1\"",
          "description": "Language for this element. Use short names specified in RFC 1766",
          "valueSet": "v"
        },
        {
          "name": "lang",
          "description": "Language for this element. Use short names specified in RFC 1766"
        },
        {
          "name": "${style:style}=\"$1\"",
          "description": "Individual CSS styles for this element",
          "valueSet": "v"
        },
        {
          "name": "style",
          "description": "Individual CSS styles for this element"
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "Tooltip text of element",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "Tooltip text of element"
        },
        {
          "name": "${accesskey:accesskey}=\"$1\"",
          "description": "Keyboard shortcut to access this element",
          "valueSet": "v"
        },
        {
          "name": "accesskey",
          "description": "Keyboard shortcut to access this element"
        },
        {
          "name": "${tabindex:tabindex}=\"$1\"",
          "description": "Specifies the tab order of this element",
          "valueSet": "v"
        },
        {
          "name": "tabindex",
          "description": "Specifies the tab order of this element"
        },
        {
          "name": "${onclick:onclick}=\"$1\"",
          "description": "JavaScript evaluated for the onclick event",
          "valueSet": "v"
        },
        {
          "name": "onclick",
          "description": "JavaScript evaluated for the onclick event"
        },
        {
          "name": "${name:name}=\"$1\"",
          "description": "Specifies the name of an anchor",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Specifies the name of an anchor"
        },
        {
          "name": "${rel:rel}=\"$1\"",
          "description": "Specifies the relationship between the current document and the linked document",
          "valueSet": "v"
        },
        {
          "name": "rel",
          "description": "Specifies the relationship between the current document and the linked document"
        },
        {
          "name": "${rev:rev}=\"$1\"",
          "description": "Specifies the relationship between the linked document and the current document",
          "valueSet": "v"
        },
        {
          "name": "rev",
          "description": "Specifies the relationship between the linked document and the current document"
        },
        {
          "name": "${target:target}=\"$1\"",
          "description": "Specifies where to open the linked document",
          "valueSet": "v"
        },
        {
          "name": "target",
          "description": "Specifies where to open the linked document"
        }
      ]
    },
    {
      "name": "f:link.external",
      "description": "A view helper for creating links to external targets. = Examples = <code> <f:link.external uri=\"http://www.typo3.org\" target=\"_blank\">external link</f:link.external> </code> <output> <a href=\"http://www.typo3.org\" target=\"_blank\">external link</a> </output> <code title=\"custom default scheme\"> <f:link.external uri=\"typo3.org\" defaultScheme=\"ftp\">external ftp link</f:link.external> </code> <output> <a href=\"ftp://typo3.org\">external ftp link</a> </output> /",
      "attributes": [
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${uri:uri}=\"$1\"",
          "description": "The URI that will be put in the href attribute of the rendered link tag",
          "valueSet": "v"
        },
        {
          "name": "uri",
          "description": "The URI that will be put in the href attribute of the rendered link tag"
        },
        {
          "name": "${defaultScheme:defaultScheme}=\"$1\"",
          "description": "Scheme the href attribute will be prefixed with if specified $uri does not contain a scheme already",
          "valueSet": "v"
        },
        {
          "name": "defaultScheme",
          "description": "Scheme the href attribute will be prefixed with if specified $uri does not contain a scheme already"
        },
        {
          "name": "${class:class}=\"$1\"",
          "description": "CSS class(es) for this element",
          "valueSet": "v"
        },
        {
          "name": "class",
          "description": "CSS class(es) for this element"
        },
        {
          "name": "${dir:dir}=\"$1\"",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)",
          "valueSet": "v"
        },
        {
          "name": "dir",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)"
        },
        {
          "name": "${id:id}=\"$1\"",
          "description": "Unique (in this file) identifier for this HTML element.",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "Unique (in this file) identifier for this HTML element."
        },
        {
          "name": "${lang:lang}=\"$1\"",
          "description": "Language for this element. Use short names specified in RFC 1766",
          "valueSet": "v"
        },
        {
          "name": "lang",
          "description": "Language for this element. Use short names specified in RFC 1766"
        },
        {
          "name": "${style:style}=\"$1\"",
          "description": "Individual CSS styles for this element",
          "valueSet": "v"
        },
        {
          "name": "style",
          "description": "Individual CSS styles for this element"
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "Tooltip text of element",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "Tooltip text of element"
        },
        {
          "name": "${accesskey:accesskey}=\"$1\"",
          "description": "Keyboard shortcut to access this element",
          "valueSet": "v"
        },
        {
          "name": "accesskey",
          "description": "Keyboard shortcut to access this element"
        },
        {
          "name": "${tabindex:tabindex}=\"$1\"",
          "description": "Specifies the tab order of this element",
          "valueSet": "v"
        },
        {
          "name": "tabindex",
          "description": "Specifies the tab order of this element"
        },
        {
          "name": "${onclick:onclick}=\"$1\"",
          "description": "JavaScript evaluated for the onclick event",
          "valueSet": "v"
        },
        {
          "name": "onclick",
          "description": "JavaScript evaluated for the onclick event"
        },
        {
          "name": "${name:name}=\"$1\"",
          "description": "Specifies the name of an anchor",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Specifies the name of an anchor"
        },
        {
          "name": "${rel:rel}=\"$1\"",
          "description": "Specifies the relationship between the current document and the linked document",
          "valueSet": "v"
        },
        {
          "name": "rel",
          "description": "Specifies the relationship between the current document and the linked document"
        },
        {
          "name": "${rev:rev}=\"$1\"",
          "description": "Specifies the relationship between the linked document and the current document",
          "valueSet": "v"
        },
        {
          "name": "rev",
          "description": "Specifies the relationship between the linked document and the current document"
        },
        {
          "name": "${target:target}=\"$1\"",
          "description": "Specifies where to open the linked document",
          "valueSet": "v"
        },
        {
          "name": "target",
          "description": "Specifies where to open the linked document"
        }
      ]
    },
    {
      "name": "f:link.page",
      "description": "A view helper for creating links to TYPO3 pages. = Examples = <code title=\"link to the current page\"> <f:link.page>page link</f:link.page> </code> <output> <a href=\"index.php?id=123\">page link</f:link.action> (depending on the current page and your TS configuration) </output> <code title=\"query parameters\"> <f:link.page pageUid=\"1\" additionalParams=\"{foo: 'bar'}\">page link</f:link.page> </code> <output> <a href=\"index.php?id=1&foo=bar\">page link</f:link.action> (depending on your TS configuration) </output> <code title=\"query parameters for extensions\"> <f:link.page pageUid=\"1\" additionalParams=\"{extension_key: {foo: 'bar'}}\">page link</f:link.page> </code> <output> <a href=\"index.php?id=1&extension_key[foo]=bar\">page link</f:link.action> (depending on your TS configuration) </output> /",
      "attributes": [
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${class:class}=\"$1\"",
          "description": "CSS class(es) for this element",
          "valueSet": "v"
        },
        {
          "name": "class",
          "description": "CSS class(es) for this element"
        },
        {
          "name": "${dir:dir}=\"$1\"",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)",
          "valueSet": "v"
        },
        {
          "name": "dir",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)"
        },
        {
          "name": "${id:id}=\"$1\"",
          "description": "Unique (in this file) identifier for this HTML element.",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "Unique (in this file) identifier for this HTML element."
        },
        {
          "name": "${lang:lang}=\"$1\"",
          "description": "Language for this element. Use short names specified in RFC 1766",
          "valueSet": "v"
        },
        {
          "name": "lang",
          "description": "Language for this element. Use short names specified in RFC 1766"
        },
        {
          "name": "${style:style}=\"$1\"",
          "description": "Individual CSS styles for this element",
          "valueSet": "v"
        },
        {
          "name": "style",
          "description": "Individual CSS styles for this element"
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "Tooltip text of element",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "Tooltip text of element"
        },
        {
          "name": "${accesskey:accesskey}=\"$1\"",
          "description": "Keyboard shortcut to access this element",
          "valueSet": "v"
        },
        {
          "name": "accesskey",
          "description": "Keyboard shortcut to access this element"
        },
        {
          "name": "${tabindex:tabindex}=\"$1\"",
          "description": "Specifies the tab order of this element",
          "valueSet": "v"
        },
        {
          "name": "tabindex",
          "description": "Specifies the tab order of this element"
        },
        {
          "name": "${onclick:onclick}=\"$1\"",
          "description": "JavaScript evaluated for the onclick event",
          "valueSet": "v"
        },
        {
          "name": "onclick",
          "description": "JavaScript evaluated for the onclick event"
        },
        {
          "name": "${target:target}=\"$1\"",
          "description": "Target of link",
          "valueSet": "v"
        },
        {
          "name": "target",
          "description": "Target of link"
        },
        {
          "name": "${rel:rel}=\"$1\"",
          "description": "Specifies the relationship between the current document and the linked document",
          "valueSet": "v"
        },
        {
          "name": "rel",
          "description": "Specifies the relationship between the current document and the linked document"
        },
        {
          "name": "${pageUid:pageUid}=\"$1\"",
          "description": "Target page. See TypoLink destination",
          "valueSet": "v"
        },
        {
          "name": "pageUid",
          "description": "Target page. See TypoLink destination"
        },
        {
          "name": "${pageType:pageType}=\"$1\"",
          "description": "Type of the target page. See typolink.parameter",
          "valueSet": "v"
        },
        {
          "name": "pageType",
          "description": "Type of the target page. See typolink.parameter"
        },
        {
          "name": "${noCache:noCache}=\"$1\"",
          "description": "Set this to disable caching for the target page. You should not need this.",
          "valueSet": "v"
        },
        {
          "name": "noCache",
          "description": "Set this to disable caching for the target page. You should not need this."
        },
        {
          "name": "${noCacheHash:noCacheHash}=\"$1\"",
          "description": "Set this to suppress the cHash query parameter created by TypoLink. You should not need this.",
          "valueSet": "v"
        },
        {
          "name": "noCacheHash",
          "description": "Set this to suppress the cHash query parameter created by TypoLink. You should not need this."
        },
        {
          "name": "${section:section}=\"$1\"",
          "description": "The anchor to be added to the URI",
          "valueSet": "v"
        },
        {
          "name": "section",
          "description": "The anchor to be added to the URI"
        },
        {
          "name": "${linkAccessRestrictedPages:linkAccessRestrictedPages}=\"$1\"",
          "description": "If set, links pointing to access restricted pages will still link to the page even though the page cannot be accessed.",
          "valueSet": "v"
        },
        {
          "name": "linkAccessRestrictedPages",
          "description": "If set, links pointing to access restricted pages will still link to the page even though the page cannot be accessed."
        },
        {
          "name": "${additionalParams:additionalParams}=\"$1\"",
          "description": "Additional query parameters that won't be prefixed like $arguments (overrule $arguments)",
          "valueSet": "v"
        },
        {
          "name": "additionalParams",
          "description": "Additional query parameters that won't be prefixed like $arguments (overrule $arguments)"
        },
        {
          "name": "${absolute:absolute}=\"$1\"",
          "description": "If set, the URI of the rendered link is absolute",
          "valueSet": "v"
        },
        {
          "name": "absolute",
          "description": "If set, the URI of the rendered link is absolute"
        },
        {
          "name": "${addQueryString:addQueryString}=\"$1\"",
          "description": "If set, the current query parameters will be kept in the URI",
          "valueSet": "v"
        },
        {
          "name": "addQueryString",
          "description": "If set, the current query parameters will be kept in the URI"
        },
        {
          "name": "${argumentsToBeExcludedFromQueryString:argumentsToBeExcludedFromQueryString}=\"$1\"",
          "description": "Arguments to be removed from the URI. Only active if $addQueryString = TRUE",
          "valueSet": "v"
        },
        {
          "name": "argumentsToBeExcludedFromQueryString",
          "description": "Arguments to be removed from the URI. Only active if $addQueryString = TRUE"
        },
        {
          "name": "${addQueryStringMethod:addQueryStringMethod}=\"$1\"",
          "description": "Set which parameters will be kept. Only active if $addQueryString = TRUE",
          "valueSet": "v"
        },
        {
          "name": "addQueryStringMethod",
          "description": "Set which parameters will be kept. Only active if $addQueryString = TRUE"
        }
      ]
    },
    {
      "name": "f:link.typolink",
      "description": "A ViewHelper to create links from fields supported by the link wizard == Example == {link} contains \"19 _blank - \"testtitle with whitespace\" &X=y\" <code title=\"minimal usage\"> <f:link.typolink parameter=\"{link}\"> Linktext </f:link.typolink> <output> <a href=\"index.php?id=19&X=y\" title=\"testtitle with whitespace\" target=\"_blank\"> Linktext </a> </output> </code> <code title=\"Full parameter usage\"> <f:link.typolink parameter=\"{link}\" target=\"_blank\" class=\"ico-class\" title=\"some title\" additionalParams=\"&u=b\" additionalAttributes=\"{type:'button'}\" useCacheHash=\"true\"> Linktext </f:link.typolink> </code> <output> <a href=\"index.php?id=19&X=y&u=b\" title=\"some title\" target=\"_blank\" class=\"ico-class\" type=\"button\"> Linktext </a> </output> /",
      "attributes": [
        {
          "name": "${parameter:parameter}=\"$1\"",
          "description": "stdWrap.typolink style parameter string",
          "valueSet": "v"
        },
        {
          "name": "parameter",
          "description": "stdWrap.typolink style parameter string"
        },
        {
          "name": "${target:target}=\"$1\"",
          "description": "",
          "valueSet": "v"
        },
        {
          "name": "target",
          "description": ""
        },
        {
          "name": "${class:class}=\"$1\"",
          "description": "",
          "valueSet": "v"
        },
        {
          "name": "class",
          "description": ""
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": ""
        },
        {
          "name": "${additionalParams:additionalParams}=\"$1\"",
          "description": "",
          "valueSet": "v"
        },
        {
          "name": "additionalParams",
          "description": ""
        },
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": ""
        },
        {
          "name": "${useCacheHash:useCacheHash}=\"$1\"",
          "description": "",
          "valueSet": "v"
        },
        {
          "name": "useCacheHash",
          "description": ""
        },
        {
          "name": "${addQueryString:addQueryString}=\"$1\"",
          "description": "",
          "valueSet": "v"
        },
        {
          "name": "addQueryString",
          "description": ""
        },
        {
          "name": "${addQueryStringMethod:addQueryStringMethod}=\"$1\"",
          "description": "",
          "valueSet": "v"
        },
        {
          "name": "addQueryStringMethod",
          "description": ""
        },
        {
          "name": "${addQueryStringExclude:addQueryStringExclude}=\"$1\"",
          "description": "",
          "valueSet": "v"
        },
        {
          "name": "addQueryStringExclude",
          "description": ""
        },
        {
          "name": "${absolute:absolute}=\"$1\"",
          "description": "Ensure the resulting URL is an absolute URL",
          "valueSet": "v"
        },
        {
          "name": "absolute",
          "description": "Ensure the resulting URL is an absolute URL"
        }
      ]
    },
    {
      "name": "f:media",
      "description": "Render a given media file with the correct html tag. It asks the RendererRegister for the correct Renderer class and if not found it falls back to the ImageViewHelper as that is the \"Renderer\" class for images in Fluid context. = Examples = <code title=\"Image Object\"> <f:media file=\"{file}\" width=\"400\" height=\"375\" /> </code> <output> <img alt=\"alt set in image record\" src=\"fileadmin/_processed_/323223424.png\" width=\"396\" height=\"375\" /> </output> <code title=\"MP4 Video Object\"> <f:media file=\"{file}\" width=\"400\" height=\"375\" /> </code> <output> <video width=\"400\" height=\"375\" controls><source src=\"fileadmin/user_upload/my-video.mp4\" type=\"video/mp4\"></video> </output> <code title=\"MP4 Video Object with loop and autoplay option set\"> <f:media file=\"{file}\" width=\"400\" height=\"375\" additionalConfig=\"{loop: '1', autoplay: '1'}\" /> </code> <output> <video width=\"400\" height=\"375\" controls loop><source src=\"fileadmin/user_upload/my-video.mp4\" type=\"video/mp4\"></video> </output> /",
      "attributes": [
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${class:class}=\"$1\"",
          "description": "CSS class(es) for this element",
          "valueSet": "v"
        },
        {
          "name": "class",
          "description": "CSS class(es) for this element"
        },
        {
          "name": "${dir:dir}=\"$1\"",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)",
          "valueSet": "v"
        },
        {
          "name": "dir",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)"
        },
        {
          "name": "${id:id}=\"$1\"",
          "description": "Unique (in this file) identifier for this HTML element.",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "Unique (in this file) identifier for this HTML element."
        },
        {
          "name": "${lang:lang}=\"$1\"",
          "description": "Language for this element. Use short names specified in RFC 1766",
          "valueSet": "v"
        },
        {
          "name": "lang",
          "description": "Language for this element. Use short names specified in RFC 1766"
        },
        {
          "name": "${style:style}=\"$1\"",
          "description": "Individual CSS styles for this element",
          "valueSet": "v"
        },
        {
          "name": "style",
          "description": "Individual CSS styles for this element"
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "Tooltip text of element",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "Tooltip text of element"
        },
        {
          "name": "${accesskey:accesskey}=\"$1\"",
          "description": "Keyboard shortcut to access this element",
          "valueSet": "v"
        },
        {
          "name": "accesskey",
          "description": "Keyboard shortcut to access this element"
        },
        {
          "name": "${tabindex:tabindex}=\"$1\"",
          "description": "Specifies the tab order of this element",
          "valueSet": "v"
        },
        {
          "name": "tabindex",
          "description": "Specifies the tab order of this element"
        },
        {
          "name": "${onclick:onclick}=\"$1\"",
          "description": "JavaScript evaluated for the onclick event",
          "valueSet": "v"
        },
        {
          "name": "onclick",
          "description": "JavaScript evaluated for the onclick event"
        },
        {
          "name": "${alt:alt}=\"$1\"",
          "description": "Specifies an alternate text for an image",
          "valueSet": "v"
        },
        {
          "name": "alt",
          "description": "Specifies an alternate text for an image"
        },
        {
          "name": "${file:file}=\"$1\"",
          "description": "File",
          "valueSet": "v"
        },
        {
          "name": "file",
          "description": "File"
        },
        {
          "name": "${additionalConfig:additionalConfig}=\"$1\"",
          "description": "This array can hold additional configuration that is passed though to the Renderer object",
          "valueSet": "v"
        },
        {
          "name": "additionalConfig",
          "description": "This array can hold additional configuration that is passed though to the Renderer object"
        },
        {
          "name": "${width:width}=\"$1\"",
          "description": "This can be a numeric value representing the fixed width of in pixels. But you can also perform simple calculations by adding \"m\" or \"c\" to the value. See imgResource.width for possible options.",
          "valueSet": "v"
        },
        {
          "name": "width",
          "description": "This can be a numeric value representing the fixed width of in pixels. But you can also perform simple calculations by adding \"m\" or \"c\" to the value. See imgResource.width for possible options."
        },
        {
          "name": "${height:height}=\"$1\"",
          "description": "This can be a numeric value representing the fixed height in pixels. But you can also perform simple calculations by adding \"m\" or \"c\" to the value. See imgResource.width for possible options.",
          "valueSet": "v"
        },
        {
          "name": "height",
          "description": "This can be a numeric value representing the fixed height in pixels. But you can also perform simple calculations by adding \"m\" or \"c\" to the value. See imgResource.width for possible options."
        },
        {
          "name": "${cropVariant:cropVariant}=\"$1\"",
          "description": "select a cropping variant, in case multiple croppings have been specified or stored in FileReference",
          "valueSet": "v"
        },
        {
          "name": "cropVariant",
          "description": "select a cropping variant, in case multiple croppings have been specified or stored in FileReference"
        }
      ]
    },
    {
      "name": "f:renderChildren",
      "description": "Render the inner parts of a Widget. This ViewHelper can only be used in a template which belongs to a Widget Controller. It renders everything inside the Widget ViewHelper, and you can pass additional arguments. /",
      "attributes": [
        {
          "name": "${arguments:arguments}=\"$1\"",
          "description": "Arguments to assign as template variables",
          "valueSet": "v"
        },
        {
          "name": "arguments",
          "description": "Arguments to assign as template variables"
        }
      ]
    },
    {
      "name": "f:render",
      "description": "Class RenderViewHelper /",
      "attributes": [
        {
          "name": "${section:section}=\"$1\"",
          "description": "Section to render - combine with partial to render section in partial",
          "valueSet": "v"
        },
        {
          "name": "section",
          "description": "Section to render - combine with partial to render section in partial"
        },
        {
          "name": "${partial:partial}=\"$1\"",
          "description": "Partial to render, with or without section",
          "valueSet": "v"
        },
        {
          "name": "partial",
          "description": "Partial to render, with or without section"
        },
        {
          "name": "${delegate:delegate}=\"$1\"",
          "description": "Optional PHP class name of a permanent, included-in-app ParsedTemplateInterface implementation to override partial/section",
          "valueSet": "v"
        },
        {
          "name": "delegate",
          "description": "Optional PHP class name of a permanent, included-in-app ParsedTemplateInterface implementation to override partial/section"
        },
        {
          "name": "${renderable:renderable}=\"$1\"",
          "description": "Instance of a RenderableInterface implementation to be rendered",
          "valueSet": "v"
        },
        {
          "name": "renderable",
          "description": "Instance of a RenderableInterface implementation to be rendered"
        },
        {
          "name": "${arguments:arguments}=\"$1\"",
          "description": "Array of variables to be transferred. Use {_all} for all variables",
          "valueSet": "v"
        },
        {
          "name": "arguments",
          "description": "Array of variables to be transferred. Use {_all} for all variables"
        },
        {
          "name": "${optional:optional}=\"$1\"",
          "description": "If TRUE, considers the *section* optional. Partial never is.",
          "valueSet": "v"
        },
        {
          "name": "optional",
          "description": "If TRUE, considers the *section* optional. Partial never is."
        },
        {
          "name": "${default:default}=\"$1\"",
          "description": "Value (usually string) to be displayed if the section or partial does not exist",
          "valueSet": "v"
        },
        {
          "name": "default",
          "description": "Value (usually string) to be displayed if the section or partial does not exist"
        },
        {
          "name": "${contentAs:contentAs}=\"$1\"",
          "description": "If used, renders the child content and adds it as a template variable with this name for use in the partial/section",
          "valueSet": "v"
        },
        {
          "name": "contentAs",
          "description": "If used, renders the child content and adds it as a template variable with this name for use in the partial/section"
        },
        {
          "name": "${debug:debug}=\"$1\"",
          "description": "If true, the admin panel shows debug information if activated,",
          "valueSet": "v"
        },
        {
          "name": "debug",
          "description": "If true, the admin panel shows debug information if activated,"
        }
      ]
    },
    {
      "name": "f:security.ifAuthenticated",
      "description": "This view helper implements an ifAuthenticated/else condition for FE users/groups. = Examples = <code title=\"Basic usage\"> <f:security.ifAuthenticated> This is being shown whenever a FE user is logged in </f:security.ifAuthenticated> </code> <output> Everything inside the <f:ifAuthenticated> tag is being displayed if you are authenticated with any FE user account. </output> <code title=\"IfAuthenticated / then / else\"> <f:security.ifAuthenticated> <f:then> This is being shown in case you have access. </f:then> <f:else> This is being displayed in case you do not have access. </f:else> </f:security.ifAuthenticated> </code> <output> Everything inside the \"then\" tag is displayed if you have access. Otherwise, everything inside the \"else\"-tag is displayed. </output> /",
      "attributes": [
        {
          "name": "${then:then}=\"$1\"",
          "description": "Value to be returned if the condition if met.",
          "valueSet": "v"
        },
        {
          "name": "then",
          "description": "Value to be returned if the condition if met."
        },
        {
          "name": "${else:else}=\"$1\"",
          "description": "Value to be returned if the condition if not met.",
          "valueSet": "v"
        },
        {
          "name": "else",
          "description": "Value to be returned if the condition if not met."
        },
        {
          "name": "${condition:condition}=\"$1\"",
          "description": "Condition expression conforming to Fluid boolean rules",
          "valueSet": "v"
        },
        {
          "name": "condition",
          "description": "Condition expression conforming to Fluid boolean rules"
        }
      ]
    },
    {
      "name": "f:security.ifHasRole",
      "description": "This view helper implements an ifHasRole/else condition for FE users/groups. = Examples = <code title=\"Basic usage\"> <f:security.ifHasRole role=\"Administrator\"> This is being shown in case the current FE user belongs to a FE usergroup (aka role) titled \"Administrator\" (case sensitive) </f:security.ifHasRole> </code> <output> Everything inside the <f:ifHasRole> tag is being displayed if the logged in FE user belongs to the specified role. </output> <code title=\"Using the usergroup uid as role identifier\"> <f:security.ifHasRole role=\"1\"> This is being shown in case the current FE user belongs to a FE usergroup (aka role) with the uid \"1\" </f:security.ifHasRole> </code> <output> Everything inside the <f:ifHasRole> tag is being displayed if the logged in FE user belongs to the specified role. </output> <code title=\"IfRole / then / else\"> <f:security.ifHasRole role=\"Administrator\"> <f:then> This is being shown in case you have the role. </f:then> <f:else> This is being displayed in case you do not have the role. </f:else> </f:security.ifHasRole> </code> <output> Everything inside the \"then\" tag is displayed if the logged in FE user belongs to the specified role. Otherwise, everything inside the \"else\"-tag is displayed. </output> /",
      "attributes": [
        {
          "name": "${role:role}=\"$1\"",
          "description": "The usergroup (either the usergroup uid or its title).",
          "valueSet": "v"
        },
        {
          "name": "role",
          "description": "The usergroup (either the usergroup uid or its title)."
        }
      ]
    },
    {
      "name": "f:translate",
      "description": "Translate a key from locallang. The files are loaded from the folder \"Resources/Private/Language/\". == Examples == <code title=\"Translate key\"> <f:translate key=\"key1\" /> </code> <output> value of key \"key1\" in the current website language </output> <code title=\"Keep HTML tags\"> <f:format.raw><f:translate key=\"htmlKey\" /></f:format.raw> </code> <output> value of key \"htmlKey\" in the current website language, no htmlspecialchars applied </output> <code title=\"Translate key from custom locallang file\"> <f:translate key=\"LLL:EXT:myext/Resources/Private/Language/locallang.xlf:key1\" /> </code> <output> value of key \"key1\" in the current website language </output> <code title=\"Inline notation with arguments and default value\"> {f:translate(key: 'argumentsKey', arguments: {0: 'dog', 1: 'fox'}, default: 'default value')} </code> <output> value of key \"argumentsKey\" in the current website language with \"%1\" and \"%2\" are replaced by \"dog\" and \"fox\" (printf) if the key is not found, the output is \"default value\" </output> <code title=\"Inline notation with extension name\"> {f:translate(key: 'someKey', extensionName: 'SomeExtensionName')} </code> <output> value of key \"someKey\" in the current website language the locallang file of extension \"some_extension_name\" will be used </output> <code title=\"Translate id as in TYPO3 Flow\"> <f:translate id=\"key1\" /> </code> <output> value of id \"key1\" in the current website language </output> /",
      "attributes": [
        {
          "name": "${key:key}=\"$1\"",
          "description": "Translation Key",
          "valueSet": "v"
        },
        {
          "name": "key",
          "description": "Translation Key"
        },
        {
          "name": "${id:id}=\"$1\"",
          "description": "Translation Key compatible to TYPO3 Flow",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "Translation Key compatible to TYPO3 Flow"
        },
        {
          "name": "${default:default}=\"$1\"",
          "description": "If the given locallang key could not be found, this value is used. If this argument is not set, child nodes will be used to render the default",
          "valueSet": "v"
        },
        {
          "name": "default",
          "description": "If the given locallang key could not be found, this value is used. If this argument is not set, child nodes will be used to render the default"
        },
        {
          "name": "${arguments:arguments}=\"$1\"",
          "description": "Arguments to be replaced in the resulting string",
          "valueSet": "v"
        },
        {
          "name": "arguments",
          "description": "Arguments to be replaced in the resulting string"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "UpperCamelCased extension key (for example BlogExample)",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "UpperCamelCased extension key (for example BlogExample)"
        },
        {
          "name": "${languageKey:languageKey}=\"$1\"",
          "description": "Language key (\"dk\" for example) or \"default\" to use for this translation. If this argument is empty, we use the current language",
          "valueSet": "v"
        },
        {
          "name": "languageKey",
          "description": "Language key (\"dk\" for example) or \"default\" to use for this translation. If this argument is empty, we use the current language"
        },
        {
          "name": "${alternativeLanguageKeys:alternativeLanguageKeys}=\"$1\"",
          "description": "Alternative language keys if no translation does exist",
          "valueSet": "v"
        },
        {
          "name": "alternativeLanguageKeys",
          "description": "Alternative language keys if no translation does exist"
        }
      ]
    },
    {
      "name": "f:uri.action",
      "description": "A view helper for creating URIs to extbase actions. = Examples = <code title=\"URI to the show-action of the current controller\"> <f:uri.action action=\"show\" /> </code> <output> index.php?id=123&tx_myextension_plugin[action]=show&tx_myextension_plugin[controller]=Standard&cHash=xyz (depending on the current page and your TS configuration) </output> /",
      "attributes": [
        {
          "name": "${action:action}=\"$1\"",
          "description": "Target action",
          "valueSet": "v"
        },
        {
          "name": "action",
          "description": "Target action"
        },
        {
          "name": "${arguments:arguments}=\"$1\"",
          "description": "Arguments",
          "valueSet": "v"
        },
        {
          "name": "arguments",
          "description": "Arguments"
        },
        {
          "name": "${controller:controller}=\"$1\"",
          "description": "Target controller. If NULL current controllerName is used",
          "valueSet": "v"
        },
        {
          "name": "controller",
          "description": "Target controller. If NULL current controllerName is used"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "Target Extension Name (without \"tx_\" prefix and no underscores). If NULL the current extension name is used",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "Target Extension Name (without \"tx_\" prefix and no underscores). If NULL the current extension name is used"
        },
        {
          "name": "${pluginName:pluginName}=\"$1\"",
          "description": "Target plugin. If empty, the current plugin name is used",
          "valueSet": "v"
        },
        {
          "name": "pluginName",
          "description": "Target plugin. If empty, the current plugin name is used"
        },
        {
          "name": "${pageUid:pageUid}=\"$1\"",
          "description": "Target page. See TypoLink destination",
          "valueSet": "v"
        },
        {
          "name": "pageUid",
          "description": "Target page. See TypoLink destination"
        },
        {
          "name": "${pageType:pageType}=\"$1\"",
          "description": "Type of the target page. See typolink.parameter",
          "valueSet": "v"
        },
        {
          "name": "pageType",
          "description": "Type of the target page. See typolink.parameter"
        },
        {
          "name": "${noCache:noCache}=\"$1\"",
          "description": "Set this to disable caching for the target page. You should not need this.",
          "valueSet": "v"
        },
        {
          "name": "noCache",
          "description": "Set this to disable caching for the target page. You should not need this."
        },
        {
          "name": "${noCacheHash:noCacheHash}=\"$1\"",
          "description": "Set this to suppress the cHash query parameter created by TypoLink. You should not need this.",
          "valueSet": "v"
        },
        {
          "name": "noCacheHash",
          "description": "Set this to suppress the cHash query parameter created by TypoLink. You should not need this."
        },
        {
          "name": "${section:section}=\"$1\"",
          "description": "The anchor to be added to the URI",
          "valueSet": "v"
        },
        {
          "name": "section",
          "description": "The anchor to be added to the URI"
        },
        {
          "name": "${format:format}=\"$1\"",
          "description": "The requested format, e.g. \".html",
          "valueSet": "v"
        },
        {
          "name": "format",
          "description": "The requested format, e.g. \".html"
        },
        {
          "name": "${linkAccessRestrictedPages:linkAccessRestrictedPages}=\"$1\"",
          "description": "If set, links pointing to access restricted pages will still link to the page even though the page cannot be accessed.",
          "valueSet": "v"
        },
        {
          "name": "linkAccessRestrictedPages",
          "description": "If set, links pointing to access restricted pages will still link to the page even though the page cannot be accessed."
        },
        {
          "name": "${additionalParams:additionalParams}=\"$1\"",
          "description": "additional query parameters that won't be prefixed like $arguments (overrule $arguments)",
          "valueSet": "v"
        },
        {
          "name": "additionalParams",
          "description": "additional query parameters that won't be prefixed like $arguments (overrule $arguments)"
        },
        {
          "name": "${absolute:absolute}=\"$1\"",
          "description": "If set, an absolute URI is rendered",
          "valueSet": "v"
        },
        {
          "name": "absolute",
          "description": "If set, an absolute URI is rendered"
        },
        {
          "name": "${addQueryString:addQueryString}=\"$1\"",
          "description": "If set, the current query parameters will be kept in the URI",
          "valueSet": "v"
        },
        {
          "name": "addQueryString",
          "description": "If set, the current query parameters will be kept in the URI"
        },
        {
          "name": "${argumentsToBeExcludedFromQueryString:argumentsToBeExcludedFromQueryString}=\"$1\"",
          "description": "arguments to be removed from the URI. Only active if $addQueryString = TRUE",
          "valueSet": "v"
        },
        {
          "name": "argumentsToBeExcludedFromQueryString",
          "description": "arguments to be removed from the URI. Only active if $addQueryString = TRUE"
        },
        {
          "name": "${addQueryStringMethod:addQueryStringMethod}=\"$1\"",
          "description": "Set which parameters will be kept. Only active if $addQueryString = TRUE",
          "valueSet": "v"
        },
        {
          "name": "addQueryStringMethod",
          "description": "Set which parameters will be kept. Only active if $addQueryString = TRUE"
        }
      ]
    },
    {
      "name": "f:uri.email",
      "description": "Email URI view helper. Generates an email URI incorporating TYPO3s spamProtectEmailAddresses-settings. = Examples <code title=\"basic email URI\"> </code> <output> javascript:linkTo_UnCryptMailto('ocknvq,hqqBdct0vnf'); (depending on your spamProtectEmailAddresses-settings) </output> /",
      "attributes": [
        {
          "name": "${email:email}=\"$1\"",
          "description": "The email address to be turned into a URI",
          "valueSet": "v"
        },
        {
          "name": "email",
          "description": "The email address to be turned into a URI"
        }
      ]
    },
    {
      "name": "f:uri.external",
      "description": "A view helper for creating URIs to external targets. Currently the specified URI is simply passed through. = Examples = <code> <f:uri.external uri=\"http://www.typo3.org\" /> </code> <output> http://www.typo3.org </output> <code title=\"custom default scheme\"> <f:uri.external uri=\"typo3.org\" defaultScheme=\"ftp\" /> </code> <output> ftp://typo3.org </output> /",
      "attributes": [
        {
          "name": "${uri:uri}=\"$1\"",
          "description": "target URI",
          "valueSet": "v"
        },
        {
          "name": "uri",
          "description": "target URI"
        },
        {
          "name": "${defaultScheme:defaultScheme}=\"$1\"",
          "description": "scheme the href attribute will be prefixed with if specified $uri does not contain a scheme already",
          "valueSet": "v"
        },
        {
          "name": "defaultScheme",
          "description": "scheme the href attribute will be prefixed with if specified $uri does not contain a scheme already"
        }
      ]
    },
    {
      "name": "f:uri.image",
      "description": "Resizes a given image (if required) and returns its relative path. = Examples = <code title=\"Default\"> <f:uri.image src=\"EXT:myext/Resources/Public/typo3_logo.png\" /> </code> <output> typo3conf/ext/myext/Resources/Public/typo3_logo.png or (in BE mode): ../typo3conf/ext/myext/Resources/Public/typo3_logo.png </output> <code title=\"Image Object\"> <f:uri.image image=\"{imageObject}\" /> </code> <output> fileadmin/images/image.png or (in BE mode): fileadmin/images/image.png </output> <code title=\"Inline notation\"> {f:uri.image(src: 'EXT:myext/Resources/Public/typo3_logo.png', minWidth: 30, maxWidth: 40)} </code> <output> typo3temp/assets/images/[b4c0e7ed5c].png (depending on your TYPO3s encryption key) </output> <code title=\"non existing image\"> <f:uri.image src=\"NonExistingImage.png\" /> </code> <output> Could not get image resource for \"NonExistingImage.png\". </output> /",
      "attributes": [
        {
          "name": "${src:src}=\"$1\"",
          "description": "src",
          "valueSet": "v"
        },
        {
          "name": "src",
          "description": "src"
        },
        {
          "name": "${treatIdAsReference:treatIdAsReference}=\"$1\"",
          "description": "given src argument is a sys_file_reference record",
          "valueSet": "v"
        },
        {
          "name": "treatIdAsReference",
          "description": "given src argument is a sys_file_reference record"
        },
        {
          "name": "${image:image}=\"$1\"",
          "description": "image",
          "valueSet": "v"
        },
        {
          "name": "image",
          "description": "image"
        },
        {
          "name": "${crop:crop}=\"$1\"",
          "description": "overrule cropping of image (setting to FALSE disables the cropping set in FileReference)",
          "valueSet": "v"
        },
        {
          "name": "crop",
          "description": "overrule cropping of image (setting to FALSE disables the cropping set in FileReference)"
        },
        {
          "name": "${cropVariant:cropVariant}=\"$1\"",
          "description": "select a cropping variant, in case multiple croppings have been specified or stored in FileReference",
          "valueSet": "v"
        },
        {
          "name": "cropVariant",
          "description": "select a cropping variant, in case multiple croppings have been specified or stored in FileReference"
        },
        {
          "name": "${width:width}=\"$1\"",
          "description": "width of the image. This can be a numeric value representing the fixed width of the image in pixels. But you can also perform simple calculations by adding \"m\" or \"c\" to the value. See imgResource.width for possible options.",
          "valueSet": "v"
        },
        {
          "name": "width",
          "description": "width of the image. This can be a numeric value representing the fixed width of the image in pixels. But you can also perform simple calculations by adding \"m\" or \"c\" to the value. See imgResource.width for possible options."
        },
        {
          "name": "${height:height}=\"$1\"",
          "description": "height of the image. This can be a numeric value representing the fixed height of the image in pixels. But you can also perform simple calculations by adding \"m\" or \"c\" to the value. See imgResource.width for possible options.",
          "valueSet": "v"
        },
        {
          "name": "height",
          "description": "height of the image. This can be a numeric value representing the fixed height of the image in pixels. But you can also perform simple calculations by adding \"m\" or \"c\" to the value. See imgResource.width for possible options."
        },
        {
          "name": "${minWidth:minWidth}=\"$1\"",
          "description": "minimum width of the image",
          "valueSet": "v"
        },
        {
          "name": "minWidth",
          "description": "minimum width of the image"
        },
        {
          "name": "${minHeight:minHeight}=\"$1\"",
          "description": "minimum height of the image",
          "valueSet": "v"
        },
        {
          "name": "minHeight",
          "description": "minimum height of the image"
        },
        {
          "name": "${maxWidth:maxWidth}=\"$1\"",
          "description": "maximum width of the image",
          "valueSet": "v"
        },
        {
          "name": "maxWidth",
          "description": "maximum width of the image"
        },
        {
          "name": "${maxHeight:maxHeight}=\"$1\"",
          "description": "maximum height of the image",
          "valueSet": "v"
        },
        {
          "name": "maxHeight",
          "description": "maximum height of the image"
        },
        {
          "name": "${absolute:absolute}=\"$1\"",
          "description": "Force absolute URL",
          "valueSet": "v"
        },
        {
          "name": "absolute",
          "description": "Force absolute URL"
        }
      ]
    },
    {
      "name": "f:uri.page",
      "description": "A view helper for creating URIs to TYPO3 pages. = Examples = <code title=\"URI to the current page\"> <f:uri.page>page link</f:uri.page> </code> <output> index.php?id=123 (depending on the current page and your TS configuration) </output> <code title=\"query parameters\"> <f:uri.page pageUid=\"1\" additionalParams=\"{foo: 'bar'}\" /> </code> <output> index.php?id=1&foo=bar (depending on your TS configuration) </output> <code title=\"query parameters for extensions\"> <f:uri.page pageUid=\"1\" additionalParams=\"{extension_key: {foo: 'bar'}}\" /> </code> <output> index.php?id=1&extension_key[foo]=bar (depending on your TS configuration) </output> /",
      "attributes": [
        {
          "name": "${pageUid:pageUid}=\"$1\"",
          "description": "target PID",
          "valueSet": "v"
        },
        {
          "name": "pageUid",
          "description": "target PID"
        },
        {
          "name": "${additionalParams:additionalParams}=\"$1\"",
          "description": "query parameters to be attached to the resulting URI",
          "valueSet": "v"
        },
        {
          "name": "additionalParams",
          "description": "query parameters to be attached to the resulting URI"
        },
        {
          "name": "${pageType:pageType}=\"$1\"",
          "description": "type of the target page. See typolink.parameter",
          "valueSet": "v"
        },
        {
          "name": "pageType",
          "description": "type of the target page. See typolink.parameter"
        },
        {
          "name": "${noCache:noCache}=\"$1\"",
          "description": "set this to disable caching for the target page. You should not need this.",
          "valueSet": "v"
        },
        {
          "name": "noCache",
          "description": "set this to disable caching for the target page. You should not need this."
        },
        {
          "name": "${noCacheHash:noCacheHash}=\"$1\"",
          "description": "set this to suppress the cHash query parameter created by TypoLink. You should not need this.",
          "valueSet": "v"
        },
        {
          "name": "noCacheHash",
          "description": "set this to suppress the cHash query parameter created by TypoLink. You should not need this."
        },
        {
          "name": "${section:section}=\"$1\"",
          "description": "the anchor to be added to the URI",
          "valueSet": "v"
        },
        {
          "name": "section",
          "description": "the anchor to be added to the URI"
        },
        {
          "name": "${linkAccessRestrictedPages:linkAccessRestrictedPages}=\"$1\"",
          "description": "If set, links pointing to access restricted pages will still link to the page even though the page cannot be accessed.",
          "valueSet": "v"
        },
        {
          "name": "linkAccessRestrictedPages",
          "description": "If set, links pointing to access restricted pages will still link to the page even though the page cannot be accessed."
        },
        {
          "name": "${absolute:absolute}=\"$1\"",
          "description": "If set, the URI of the rendered link is absolute",
          "valueSet": "v"
        },
        {
          "name": "absolute",
          "description": "If set, the URI of the rendered link is absolute"
        },
        {
          "name": "${addQueryString:addQueryString}=\"$1\"",
          "description": "If set, the current query parameters will be kept in the URI",
          "valueSet": "v"
        },
        {
          "name": "addQueryString",
          "description": "If set, the current query parameters will be kept in the URI"
        },
        {
          "name": "${argumentsToBeExcludedFromQueryString:argumentsToBeExcludedFromQueryString}=\"$1\"",
          "description": "arguments to be removed from the URI. Only active if $addQueryString = TRUE",
          "valueSet": "v"
        },
        {
          "name": "argumentsToBeExcludedFromQueryString",
          "description": "arguments to be removed from the URI. Only active if $addQueryString = TRUE"
        },
        {
          "name": "${addQueryStringMethod:addQueryStringMethod}=\"$1\"",
          "description": "Set which parameters will be kept. Only active if $addQueryString = TRUE",
          "valueSet": "v"
        },
        {
          "name": "addQueryStringMethod",
          "description": "Set which parameters will be kept. Only active if $addQueryString = TRUE"
        }
      ]
    },
    {
      "name": "f:uri.resource",
      "description": "A view helper for creating URIs to resources. = Examples = <code title=\"Defaults\"> <link href=\"{f:uri.resource(path:'css/stylesheet.css')}\" rel=\"stylesheet\" /> </code> <output> <link href=\"Resources/Packages/MyPackage/stylesheet.css\" rel=\"stylesheet\" /> (depending on current package) </output> /",
      "attributes": [
        {
          "name": "${path:path}=\"$1\"",
          "description": "The path and filename of the resource (relative to Public resource directory of the extension).",
          "valueSet": "v"
        },
        {
          "name": "path",
          "description": "The path and filename of the resource (relative to Public resource directory of the extension)."
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "Target extension name. If not set, the current extension name will be used",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "Target extension name. If not set, the current extension name will be used"
        },
        {
          "name": "${absolute:absolute}=\"$1\"",
          "description": "If set, an absolute URI is rendered",
          "valueSet": "v"
        },
        {
          "name": "absolute",
          "description": "If set, an absolute URI is rendered"
        }
      ]
    },
    {
      "name": "f:uri.typolink",
      "description": "A ViewHelper to create uris from fields supported by the link wizard == Example == {link} contains \"19 - - - &X=y\" Please note that due to the nature of typolink you have to provide a full set of parameters if you use the parameter only. Target, class and title will be discarded. <code title=\"minimal usage\"> <f:uri.typolink parameter=\"{link}\" /> <output> index.php?id=19&X=y </output> </code> <code title=\"Full parameter usage\"> <f:uri.typolink parameter=\"{link}\" additionalParams=\"&u=b\" useCacheHash=\"true\" /> </code> <output> index.php?id=19&X=y&u=b </output> /",
      "attributes": [
        {
          "name": "${parameter:parameter}=\"$1\"",
          "description": "stdWrap.typolink style parameter string",
          "valueSet": "v"
        },
        {
          "name": "parameter",
          "description": "stdWrap.typolink style parameter string"
        },
        {
          "name": "${additionalParams:additionalParams}=\"$1\"",
          "description": "stdWrap.typolink additionalParams",
          "valueSet": "v"
        },
        {
          "name": "additionalParams",
          "description": "stdWrap.typolink additionalParams"
        },
        {
          "name": "${useCacheHash:useCacheHash}=\"$1\"",
          "description": "",
          "valueSet": "v"
        },
        {
          "name": "useCacheHash",
          "description": ""
        },
        {
          "name": "${addQueryString:addQueryString}=\"$1\"",
          "description": "",
          "valueSet": "v"
        },
        {
          "name": "addQueryString",
          "description": ""
        },
        {
          "name": "${addQueryStringMethod:addQueryStringMethod}=\"$1\"",
          "description": "",
          "valueSet": "v"
        },
        {
          "name": "addQueryStringMethod",
          "description": ""
        },
        {
          "name": "${addQueryStringExclude:addQueryStringExclude}=\"$1\"",
          "description": "",
          "valueSet": "v"
        },
        {
          "name": "addQueryStringExclude",
          "description": ""
        },
        {
          "name": "${absolute:absolute}=\"$1\"",
          "description": "Ensure the resulting URL is an absolute URL",
          "valueSet": "v"
        },
        {
          "name": "absolute",
          "description": "Ensure the resulting URL is an absolute URL"
        }
      ]
    },
    {
      "name": "f:widget.autocomplete",
      "description": "Simple paginate widget Note: Make sure to include jQuery and jQuery UI in the HTML, like that: <script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js\"></script> <script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.4/jquery-ui.min.js\"></script> <link rel=\"stylesheet\" href=\"http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.3/themes/base/jquery-ui.css\" type=\"text/css\" media=\"all\" /> <link rel=\"stylesheet\" href=\"http://static.jquery.com/ui/css/demo-docs-theme/ui.theme.css\" type=\"text/css\" media=\"all\" /> You can include the provided TS template that includes the above snippet to the pages headerData. = Examples = <code title=\"Render lib object\"> <input type=\"text\" id=\"name\" /> <f:widget.autocomplete for=\"name\" objects=\"{posts}\" searchProperty=\"author\"> </code> <output> <input type=\"text\" id=\"name\" /> the input field and the required JavaScript for the Ajax communication (see Resources/Private/Templates/ViewHelpers/Widget/Autocomplete/Index.html </output> /",
      "attributes": [
        {
          "name": "${customWidgetId:customWidgetId}=\"$1\"",
          "description": "extend the widget identifier with a custom widget id",
          "valueSet": "v"
        },
        {
          "name": "customWidgetId",
          "description": "extend the widget identifier with a custom widget id"
        },
        {
          "name": "${objects:objects}=\"$1\"",
          "description": "Objects to auto-complete",
          "valueSet": "v"
        },
        {
          "name": "objects",
          "description": "Objects to auto-complete"
        },
        {
          "name": "${for:for}=\"$1\"",
          "description": "Property to fill",
          "valueSet": "v"
        },
        {
          "name": "for",
          "description": "Property to fill"
        },
        {
          "name": "${searchProperty:searchProperty}=\"$1\"",
          "description": "Property to search within when filtering list",
          "valueSet": "v"
        },
        {
          "name": "searchProperty",
          "description": "Property to search within when filtering list"
        }
      ]
    },
    {
      "name": "f:widget.link",
      "description": "A view helper for creating Links to extbase actions within widets. = Examples = <code title=\"URI to the show-action of the current controller\"> <f:widget.link action=\"show\">link</f:widget.link> </code> <output> <a href=\"index.php?id=123&tx_myextension_plugin[widgetIdentifier][action]=show&tx_myextension_plugin[widgetIdentifier][controller]=Standard&cHash=xyz\">link</a> (depending on the current page, widget and your TS configuration) </output> /",
      "attributes": [
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${class:class}=\"$1\"",
          "description": "CSS class(es) for this element",
          "valueSet": "v"
        },
        {
          "name": "class",
          "description": "CSS class(es) for this element"
        },
        {
          "name": "${dir:dir}=\"$1\"",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)",
          "valueSet": "v"
        },
        {
          "name": "dir",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)"
        },
        {
          "name": "${id:id}=\"$1\"",
          "description": "Unique (in this file) identifier for this HTML element.",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "Unique (in this file) identifier for this HTML element."
        },
        {
          "name": "${lang:lang}=\"$1\"",
          "description": "Language for this element. Use short names specified in RFC 1766",
          "valueSet": "v"
        },
        {
          "name": "lang",
          "description": "Language for this element. Use short names specified in RFC 1766"
        },
        {
          "name": "${style:style}=\"$1\"",
          "description": "Individual CSS styles for this element",
          "valueSet": "v"
        },
        {
          "name": "style",
          "description": "Individual CSS styles for this element"
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "Tooltip text of element",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "Tooltip text of element"
        },
        {
          "name": "${accesskey:accesskey}=\"$1\"",
          "description": "Keyboard shortcut to access this element",
          "valueSet": "v"
        },
        {
          "name": "accesskey",
          "description": "Keyboard shortcut to access this element"
        },
        {
          "name": "${tabindex:tabindex}=\"$1\"",
          "description": "Specifies the tab order of this element",
          "valueSet": "v"
        },
        {
          "name": "tabindex",
          "description": "Specifies the tab order of this element"
        },
        {
          "name": "${onclick:onclick}=\"$1\"",
          "description": "JavaScript evaluated for the onclick event",
          "valueSet": "v"
        },
        {
          "name": "onclick",
          "description": "JavaScript evaluated for the onclick event"
        },
        {
          "name": "${name:name}=\"$1\"",
          "description": "Specifies the name of an anchor",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Specifies the name of an anchor"
        },
        {
          "name": "${rel:rel}=\"$1\"",
          "description": "Specifies the relationship between the current document and the linked document",
          "valueSet": "v"
        },
        {
          "name": "rel",
          "description": "Specifies the relationship between the current document and the linked document"
        },
        {
          "name": "${rev:rev}=\"$1\"",
          "description": "Specifies the relationship between the linked document and the current document",
          "valueSet": "v"
        },
        {
          "name": "rev",
          "description": "Specifies the relationship between the linked document and the current document"
        },
        {
          "name": "${target:target}=\"$1\"",
          "description": "Specifies where to open the linked document",
          "valueSet": "v"
        },
        {
          "name": "target",
          "description": "Specifies where to open the linked document"
        },
        {
          "name": "${useCacheHash:useCacheHash}=\"$1\"",
          "description": "True whether the cache hash should be appended to the URL",
          "valueSet": "v"
        },
        {
          "name": "useCacheHash",
          "description": "True whether the cache hash should be appended to the URL"
        },
        {
          "name": "${addQueryStringMethod:addQueryStringMethod}=\"$1\"",
          "description": "Method to be used for query string",
          "valueSet": "v"
        },
        {
          "name": "addQueryStringMethod",
          "description": "Method to be used for query string"
        },
        {
          "name": "${action:action}=\"$1\"",
          "description": "Target action",
          "valueSet": "v"
        },
        {
          "name": "action",
          "description": "Target action"
        },
        {
          "name": "${arguments:arguments}=\"$1\"",
          "description": "Arguments",
          "valueSet": "v"
        },
        {
          "name": "arguments",
          "description": "Arguments"
        },
        {
          "name": "${section:section}=\"$1\"",
          "description": "The anchor to be added to the URI",
          "valueSet": "v"
        },
        {
          "name": "section",
          "description": "The anchor to be added to the URI"
        },
        {
          "name": "${format:format}=\"$1\"",
          "description": "The requested format, e.g. \".html",
          "valueSet": "v"
        },
        {
          "name": "format",
          "description": "The requested format, e.g. \".html"
        },
        {
          "name": "${ajax:ajax}=\"$1\"",
          "description": "TRUE if the URI should be to an AJAX widget, FALSE otherwise.",
          "valueSet": "v"
        },
        {
          "name": "ajax",
          "description": "TRUE if the URI should be to an AJAX widget, FALSE otherwise."
        }
      ]
    },
    {
      "name": "f:widget.paginate",
      "description": "This ViewHelper renders a Pagination of objects. = Examples = <code title=\"required arguments\"> <f:widget.paginate objects=\"{blogs}\" as=\"paginatedBlogs\"> use {paginatedBlogs} as you used {blogs} before, most certainly inside a <f:for> loop. </f:widget.paginate> </code> <code title=\"full configuration\"> <f:widget.paginate objects=\"{blogs}\" as=\"paginatedBlogs\" configuration=\"{itemsPerPage: 5, insertAbove: 1, insertBelow: 0, maximumNumberOfLinks: 10}\"> use {paginatedBlogs} as you used {blogs} before, most certainly inside a <f:for> loop. </f:widget.paginate> </code> = Performance characteristics = In the above examples, it looks like {blogs} contains all Blog objects, thus you might wonder if all objects were fetched from the database. However, the blogs are NOT fetched from the database until you actually use them, so the paginate ViewHelper will adjust the query sent to the database and receive only the small subset of objects. So, there is no negative performance overhead in using the Paginate Widget. /",
      "attributes": [
        {
          "name": "${customWidgetId:customWidgetId}=\"$1\"",
          "description": "extend the widget identifier with a custom widget id",
          "valueSet": "v"
        },
        {
          "name": "customWidgetId",
          "description": "extend the widget identifier with a custom widget id"
        },
        {
          "name": "${objects:objects}=\"$1\"",
          "description": "Object",
          "valueSet": "v"
        },
        {
          "name": "objects",
          "description": "Object"
        },
        {
          "name": "${as:as}=\"$1\"",
          "description": "as",
          "valueSet": "v"
        },
        {
          "name": "as",
          "description": "as"
        },
        {
          "name": "${configuration:configuration}=\"$1\"",
          "description": "configuration",
          "valueSet": "v"
        },
        {
          "name": "configuration",
          "description": "configuration"
        }
      ]
    },
    {
      "name": "f:widget.uri",
      "description": "A view helper for creating URIs to extbase actions within widgets. = Examples = <code title=\"URI to the show-action of the current controller\"> <f:widget.uri action=\"show\" /> </code> <output> index.php?id=123&tx_myextension_plugin[widgetIdentifier][action]=show&tx_myextension_plugin[widgetIdentifier][controller]=Standard&cHash=xyz (depending on the current page, widget and your TS configuration) </output> /",
      "attributes": [
        {
          "name": "${useCacheHash:useCacheHash}=\"$1\"",
          "description": "True whether the cache hash should be appended to the URL",
          "valueSet": "v"
        },
        {
          "name": "useCacheHash",
          "description": "True whether the cache hash should be appended to the URL"
        },
        {
          "name": "${addQueryStringMethod:addQueryStringMethod}=\"$1\"",
          "description": "Method to be used for query string",
          "valueSet": "v"
        },
        {
          "name": "addQueryStringMethod",
          "description": "Method to be used for query string"
        },
        {
          "name": "${action:action}=\"$1\"",
          "description": "Target action",
          "valueSet": "v"
        },
        {
          "name": "action",
          "description": "Target action"
        },
        {
          "name": "${arguments:arguments}=\"$1\"",
          "description": "Arguments",
          "valueSet": "v"
        },
        {
          "name": "arguments",
          "description": "Arguments"
        },
        {
          "name": "${section:section}=\"$1\"",
          "description": "The anchor to be added to the URI",
          "valueSet": "v"
        },
        {
          "name": "section",
          "description": "The anchor to be added to the URI"
        },
        {
          "name": "${format:format}=\"$1\"",
          "description": "The requested format, e.g. \".html",
          "valueSet": "v"
        },
        {
          "name": "format",
          "description": "The requested format, e.g. \".html"
        },
        {
          "name": "${ajax:ajax}=\"$1\"",
          "description": "TRUE if the URI should be to an AJAX widget, FALSE otherwise.",
          "valueSet": "v"
        },
        {
          "name": "ajax",
          "description": "TRUE if the URI should be to an AJAX widget, FALSE otherwise."
        }
      ]
    }
  ]
}